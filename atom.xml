<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一个小白的python之路</title>
  
  <subtitle>勤学如春起之苗，不见其增，日有所长；辍学如磨刀之石，不见其损，日有所亏。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-03-27T07:13:02.920Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>望穿秋水</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>学习笔记之字典III</title>
    <link href="http://yoursite.com/2018/03/27/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%AD%97%E5%85%B8III/"/>
    <id>http://yoursite.com/2018/03/27/学习笔记之字典III/</id>
    <published>2018-03-27T00:00:00.000Z</published>
    <updated>2018-03-27T07:13:02.920Z</updated>
    
    <content type="html"><![CDATA[<p>字典内容这多，超出我想象，这已经是第三弹了。。。。。</p><p>1.创建三个字典，clour == red ,yellow ,gree .points 为5 ，10 15<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ alien_0 = &#123;<span class="string">'color'</span>:<span class="string">'red'</span>,<span class="string">'points'</span>:5&#125;</span><br><span class="line">$ alien_1 = &#123;<span class="string">'color'</span>:<span class="string">'yellow'</span>,<span class="string">'points'</span>:10&#125;</span><br><span class="line">$ alien_2 = &#123;<span class="string">'color'</span>:<span class="string">'gree'</span>,<span class="string">'points'</span>:15&#125;</span><br></pre></td></tr></table></figure></p><p>2.把字典存储在一个列表中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aliens = [alien_0,alien_1,alien_2]</span><br></pre></td></tr></table></figure></p><p>3.循环打印三个外星人<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">for</span>  alien  <span class="keyword">in</span> aliens:</span><br><span class="line">$   <span class="built_in">print</span>(alien)</span><br></pre></td></tr></table></figure></p><p>4.创建 一个空列表<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aliens  = []</span><br></pre></td></tr></table></figure></p><p>5.创建30个外星人<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">for</span> alien_number  <span class="keyword">in</span> range(30):</span><br><span class="line">$   new_alien = &#123;<span class="string">'color'</span>:<span class="string">'gree'</span>,<span class="string">'points'</span>:5,<span class="string">'speed'</span>:<span class="string">'slow'</span>&#125;<span class="comment">#创建一个变量接收新外星人的属性</span></span><br></pre></td></tr></table></figure></p><p>6.把外星人添加到空列表<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aliens.append(new_alien)</span><br></pre></td></tr></table></figure></p><p>7.显示前五个外星人<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">for</span>  alien  <span class="keyword">in</span> aliens[ :5]:</span><br><span class="line">$<span class="built_in">print</span>(alien)</span><br><span class="line">$ <span class="built_in">print</span>(<span class="string">'......'</span>)</span><br></pre></td></tr></table></figure></p><p>8.显示创建了多少个外星人<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">print</span>(<span class="string">'一共创建了'</span> + str(len(aliens)) + <span class="string">'个外星人'</span>)</span><br></pre></td></tr></table></figure></p><p>8.创建 一个空列表<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aliens  = []</span><br></pre></td></tr></table></figure></p><p>9.创建30个外星人<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">for</span> alien_number  <span class="keyword">in</span> range(30):</span><br><span class="line">$new_alien = &#123;<span class="string">'color'</span>:<span class="string">'gree'</span>,<span class="string">'points'</span>:5,<span class="string">'speed'</span>:<span class="string">'slow'</span>&#125;<span class="comment">#创建一个变量接收新外星人的属性</span></span><br></pre></td></tr></table></figure></p><p>10.把外星人添加到空列表<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aliens.append(new_alien)</span><br></pre></td></tr></table></figure></p><p>11.修改前三个外星人的属性<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">for</span>  alien  <span class="keyword">in</span> aliens[:3]:</span><br><span class="line">$<span class="keyword">if</span> alien[<span class="string">'color'</span>] == <span class="string">'gree'</span> :</span><br><span class="line">$   alien[<span class="string">'color'</span>] = <span class="string">'yellow'</span></span><br><span class="line">$   alien[<span class="string">'points'</span>] = 10</span><br><span class="line">$    alien[<span class="string">'speed'</span>] = <span class="string">'mdeium'</span></span><br></pre></td></tr></table></figure></p><p>12.显示前五个外星人<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">for</span>  alien  <span class="keyword">in</span> aliens[0:5]:</span><br><span class="line">$<span class="built_in">print</span>(alien)</span><br><span class="line">$ <span class="built_in">print</span>(<span class="string">'......'</span>)</span><br></pre></td></tr></table></figure></p><p>13.创建一个字典 ，包括客人点的菜，和菜的配料说明<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ pizza  =&#123;</span><br><span class="line">$<span class="string">'haibao'</span>:<span class="string">'tiande'</span>,</span><br><span class="line">$<span class="string">'quanjiatong'</span>:[<span class="string">'shutiao'</span>,<span class="string">'jitui'</span>,<span class="string">'yiliao'</span>]</span><br><span class="line">$ &#125;</span><br></pre></td></tr></table></figure></p><p>14.循环打印字典和配料说明<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">print</span>(<span class="string">'你点了一个'</span> + pizza[<span class="string">'haibao'</span>]  + <span class="string">'haibao'</span> +<span class="string">'和一个全家桶，辅料是：'</span>)</span><br><span class="line">$ <span class="keyword">for</span>  x  <span class="keyword">in</span> pizza[<span class="string">'quanjiatong'</span>] :</span><br><span class="line">$<span class="built_in">print</span>(x)</span><br></pre></td></tr></table></figure></p><p>15.字典中创建语言列表<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ favorite_langeages = &#123;</span><br><span class="line">$<span class="string">'join'</span>:[<span class="string">'cc'</span>],</span><br><span class="line">$<span class="string">'jack'</span>:[<span class="string">'java'</span>,<span class="string">'ruby'</span>],</span><br><span class="line">$<span class="string">'mike'</span>:[<span class="string">'go'</span>],</span><br><span class="line">$<span class="string">'fancunjun'</span>:[<span class="string">'python'</span>,<span class="string">'C#'</span>]</span><br><span class="line">$&#125;</span><br></pre></td></tr></table></figure></p><p>16.循环打印字典内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">for</span> name ,langeages  <span class="keyword">in</span> favorite_langeages.items():</span><br><span class="line">$   <span class="built_in">print</span>(name + <span class="string">"'favorite_langeages  are :"</span>)</span><br><span class="line">$     <span class="keyword">for</span>  langeage  <span class="keyword">in</span>  langeages:</span><br><span class="line">$    <span class="built_in">print</span>(langeage)</span><br></pre></td></tr></table></figure></p><p>17.创建一个用户字典，包括用户名，和用户的基石信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ usres =&#123;</span><br><span class="line">$  <span class="string">'fancunjun'</span>:&#123;</span><br><span class="line">$                <span class="string">'first_name'</span>:<span class="string">'fan'</span>,</span><br><span class="line">$                 <span class="string">'last_name'</span>:<span class="string">'cunjun'</span>,</span><br><span class="line">$                <span class="string">'location'</span>:<span class="string">'qingdao'</span></span><br><span class="line">$                 &#125;,<span class="comment">#不要忘记加逗号</span></span><br><span class="line">$   <span class="string">'chenhuaxia'</span>:&#123;</span><br><span class="line">$                <span class="string">'first_name'</span>:<span class="string">'chen'</span>,</span><br><span class="line">$               <span class="string">'last_name'</span>:<span class="string">'huaxia'</span>,</span><br><span class="line">$                <span class="string">'location'</span>:<span class="string">'jiaozhou'</span></span><br><span class="line">$                &#125;</span><br><span class="line">$   &#125;</span><br></pre></td></tr></table></figure></p><p>18.遍历字典<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">for</span>  username ,user_info  <span class="keyword">in</span> usres.items():</span><br></pre></td></tr></table></figure></p><p>19.打印用户名<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$   <span class="built_in">print</span>(<span class="string">'username is'</span> + username)</span><br></pre></td></tr></table></figure></p><p>20.给用用户名和地址赋值<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ full_name = user_info[<span class="string">'first_name'</span>] + <span class="string">' '</span> + user_info[<span class="string">'last_name'</span>]</span><br><span class="line">$ location = user_info[<span class="string">'location'</span>]</span><br></pre></td></tr></table></figure></p><p>21.打印全名和地址<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">print</span>(<span class="string">'\tfull_name is '</span> + full_name)</span><br><span class="line">$ <span class="built_in">print</span>(<span class="string">'\tlocatiom is '</span>  + location)</span><br></pre></td></tr></table></figure></p><p>22.打印用户输入的名字<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ name = input(<span class="string">'enter your name:'</span>)</span><br><span class="line">$ <span class="built_in">print</span>(name)</span><br></pre></td></tr></table></figure></p><p>23.创建三个人的字典，并把字典存储到列表中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ join = &#123;</span><br><span class="line">$  <span class="string">'age'</span>:34,</span><br><span class="line">$    <span class="string">'localtion'</span>:<span class="string">'qingdao'</span>,</span><br><span class="line">$    <span class="string">'fullname'</span>:<span class="string">'jointion'</span></span><br><span class="line">$ &#125;</span><br><span class="line">$ jack =&#123;</span><br><span class="line">$    <span class="string">'age'</span>:43,</span><br><span class="line">$   <span class="string">'localtion'</span>:<span class="string">'beijing'</span>,</span><br><span class="line">$    <span class="string">'fullname'</span>:<span class="string">'jacktion'</span></span><br><span class="line">$ &#125;</span><br><span class="line"></span><br><span class="line">$ mike = &#123;</span><br><span class="line">$    <span class="string">'age'</span>:30,</span><br><span class="line">$    <span class="string">'localtion'</span>:<span class="string">'hanguo'</span>,</span><br><span class="line">$    <span class="string">'fullname'</span>:<span class="string">'miketion'</span></span><br><span class="line">$ &#125;</span><br></pre></td></tr></table></figure></p><p>24.创建一个peoole列表<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ peopers = [join,mike,jack]</span><br></pre></td></tr></table></figure></p><p>25.遍历这个列表，打印所有人的信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">for</span> p_message <span class="keyword">in</span> peopers:</span><br><span class="line">$    <span class="built_in">print</span>(p_message)</span><br></pre></td></tr></table></figure></p><p>26.创建三个宠物字典<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ dog =&#123;</span><br><span class="line">$  <span class="string">'color'</span>:<span class="string">'yellow'</span>,</span><br><span class="line">$   <span class="string">'ownname'</span>:<span class="string">'lily'</span></span><br><span class="line">$ &#125;</span><br><span class="line"></span><br><span class="line">$ cat = &#123;</span><br><span class="line">$  <span class="string">'color'</span>:<span class="string">'white'</span>,</span><br><span class="line">$    <span class="string">'ownname'</span>:<span class="string">'mike'</span></span><br><span class="line">$ &#125;</span><br><span class="line"></span><br><span class="line">$ pig = &#123;</span><br><span class="line">$  <span class="string">'color'</span>:<span class="string">'black'</span>,</span><br><span class="line">$   <span class="string">'ownname'</span>:<span class="string">'ruby'</span></span><br><span class="line">$ &#125;</span><br></pre></td></tr></table></figure></p><p>27.把字典存储在列表中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pets = [dog ,cat, pig]</span><br></pre></td></tr></table></figure></p><p>28.循环打印列表中的所有信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">for</span> pets_message <span class="keyword">in</span> pets:</span><br><span class="line">$  <span class="built_in">print</span>(pets_message)</span><br></pre></td></tr></table></figure></p><p>29.创建朋友喜欢的地方<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ favorite_place = &#123;</span><br><span class="line">$  <span class="string">'liuyifei'</span>:[<span class="string">'hanguo'</span>,<span class="string">'shanghai'</span>],</span><br><span class="line">$    <span class="string">'fanbingbing'</span>:[<span class="string">'qingdao'</span>,<span class="string">'guangzhou'</span>],</span><br><span class="line">$   <span class="string">'yanglan'</span>:[<span class="string">'shenzhen'</span>,<span class="string">'tianjin'</span>],</span><br><span class="line">$   <span class="string">'yangying'</span>:[<span class="string">'taiguo'</span>,<span class="string">'riben'</span>],</span><br><span class="line">$    &#125;</span><br></pre></td></tr></table></figure></p><p>30.把特殊朋友存储在一起<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ friends = [<span class="string">'yanglan'</span>,<span class="string">'liuyifei'</span>]</span><br><span class="line">$ <span class="keyword">for</span> name <span class="keyword">in</span> favorite_place:</span><br><span class="line">$  <span class="keyword">if</span> name <span class="keyword">in</span> friends:</span><br><span class="line">$       <span class="built_in">print</span>(name + <span class="string">' favorite_place is '</span> + str(favorite_place[name]))</span><br><span class="line">$   <span class="keyword">else</span>:</span><br><span class="line">$       <span class="built_in">print</span>(<span class="string">'hi'</span> + name + <span class="string">'you must be change the input!'</span>)</span><br></pre></td></tr></table></figure></p><p>31.创建城市<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ cities = &#123;</span><br><span class="line">$      <span class="string">'qingdao'</span>: &#123;</span><br><span class="line">$           <span class="string">'country'</span>:<span class="string">'china'</span>,</span><br><span class="line">$           <span class="string">'population'</span>:1500,</span><br><span class="line">$           <span class="string">'fact'</span>:<span class="string">'is a graate country'</span></span><br><span class="line">$           &#125;,</span><br><span class="line">$       <span class="string">'beijing'</span>:&#123;</span><br><span class="line">$            <span class="string">'huaehngdun'</span>:<span class="string">'usa'</span>,</span><br><span class="line">$            <span class="string">'population'</span>:200,</span><br><span class="line">$            <span class="string">'fact'</span>:<span class="string">'free for erverone'</span></span><br><span class="line">$           &#125;,</span><br><span class="line">$       <span class="string">'moreben'</span>:&#123;</span><br><span class="line">$           <span class="string">'country'</span>:<span class="string">'moxige'</span>,</span><br><span class="line">$           <span class="string">'population'</span>:<span class="string">'300'</span>,</span><br><span class="line">$           <span class="string">'fact'</span>:<span class="string">'child is good1'</span></span><br><span class="line">$           &#125;</span><br><span class="line">$   &#125;</span><br></pre></td></tr></table></figure></p><p>32.循环打印城市和城市的所有信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">for</span> city <span class="keyword">in</span> cities:</span><br><span class="line">$  <span class="built_in">print</span>(city + <span class="string">' mmessage is '</span> + str(cities[city]))</span><br></pre></td></tr></table></figure></p><p>到此，字典的学习靠一段落了，对字典有了一个更深的理解和应用，多写多敲比多看要强的多！！什么？要美女图，美女图能让你进步吗？对你的心灵有触动吗？还是踏实的学习吧！<br><img src="/images/努力幸运.jpg" alt="&#39;努力幸运&#39;"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;字典内容这多，超出我想象，这已经是第三弹了。。。。。&lt;/p&gt;
&lt;p&gt;1.创建三个字典，clour == red ,yellow ,gree .points 为5 ，10 15&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>学习笔记之字典II</title>
    <link href="http://yoursite.com/2018/03/26/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%AD%97%E5%85%B8II/"/>
    <id>http://yoursite.com/2018/03/26/学习笔记字典II/</id>
    <published>2018-03-26T00:00:00.000Z</published>
    <updated>2018-03-26T09:13:49.325Z</updated>
    
    <content type="html"><![CDATA[<p>今天继续把学习字典的笔记整事一下，发布出来，请大家指正。<br>1.创建字典<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ user_0 = &#123;</span><br><span class="line">$<span class="string">'username'</span> : <span class="string">'fancunjun'</span>,</span><br><span class="line">$<span class="string">'first_name'</span>:<span class="string">'fan'</span>,</span><br><span class="line">$<span class="string">'last_name'</span>:<span class="string">'cunjun'</span></span><br><span class="line">$ &#125;</span><br></pre></td></tr></table></figure></p><p>2.遍历字典的元素<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">for</span> key,value <span class="keyword">in</span> user_0.items():</span><br><span class="line">$<span class="built_in">print</span>(<span class="string">'\nkey:'</span>+ key,<span class="string">'value:'</span>+value)</span><br></pre></td></tr></table></figure></p><p>3.遍历字典中的所有的键<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">for</span> name <span class="keyword">in</span> user_0:</span><br><span class="line">$<span class="built_in">print</span>(name)</span><br></pre></td></tr></table></figure></p><p>4.给出指定朋友喜欢的编程语言<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ favorite_langeages = &#123;</span><br><span class="line">$<span class="string">'join'</span>:<span class="string">'c'</span>,</span><br><span class="line">$<span class="string">'jack'</span>:<span class="string">'java'</span>,</span><br><span class="line">$<span class="string">'mike'</span>:<span class="string">'c++'</span>,</span><br><span class="line">$<span class="string">'fancunjun'</span>:<span class="string">'python'</span></span><br><span class="line">$ &#125;</span><br><span class="line">$ friends = [<span class="string">'jack'</span>,<span class="string">'fancunjun'</span>]</span><br><span class="line">$ <span class="keyword">for</span> name  <span class="keyword">in</span> favorite_langeages :</span><br><span class="line">$<span class="keyword">if</span> name <span class="keyword">in</span> friends:</span><br><span class="line">$<span class="built_in">print</span>(<span class="string">'hi ,'</span>+ name + <span class="string">'i see you favorite_langeages is '</span> + favorite_langeages[name])</span><br></pre></td></tr></table></figure></p><p>5.查看元素是否存在字典中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ favorite_langeages = &#123;</span><br><span class="line">$<span class="string">'join'</span>:<span class="string">'c'</span>,</span><br><span class="line">$<span class="string">'jack'</span>:<span class="string">'java'</span>,</span><br><span class="line">$<span class="string">'mike'</span>:<span class="string">'c++'</span>,</span><br><span class="line">$<span class="string">'fancunjun'</span>:<span class="string">'python'</span></span><br><span class="line">$ &#125;</span><br><span class="line">$ <span class="keyword">if</span> <span class="string">'wangtiangui'</span> not <span class="keyword">in</span> favorite_langeages:</span><br><span class="line">$<span class="built_in">print</span>(<span class="string">'please jion in the test !'</span>)</span><br></pre></td></tr></table></figure></p><p>6.按照顺序遍历字典<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ favorite_langeages = &#123;</span><br><span class="line">$<span class="string">'join'</span>:<span class="string">'c'</span>,</span><br><span class="line">$<span class="string">'jack'</span>:<span class="string">'java'</span>,</span><br><span class="line">$<span class="string">'mike'</span>:<span class="string">'c++'</span>,</span><br><span class="line">$<span class="string">'fancunjun'</span>:<span class="string">'python'</span></span><br><span class="line">$ &#125;</span><br><span class="line">$ <span class="keyword">for</span> name <span class="keyword">in</span> sorted(favorite_langeages.keys()):</span><br><span class="line">$<span class="built_in">print</span>(<span class="string">"thank you!"</span> + name.title())</span><br></pre></td></tr></table></figure></p><p>7.遍历字典中所有的值<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ favorite_langeages = &#123;</span><br><span class="line">$<span class="string">'join'</span>:<span class="string">'c'</span>,</span><br><span class="line">$<span class="string">'jacd'</span>:<span class="string">'java'</span>,</span><br><span class="line">$<span class="string">'mike'</span>:<span class="string">'c++'</span>,</span><br><span class="line">$<span class="string">'fancunjun'</span>:<span class="string">'python'</span></span><br><span class="line">$&#125;</span><br><span class="line">$ <span class="built_in">print</span>(<span class="string">'以下是打印字典中所的值'</span>)</span><br><span class="line">$ <span class="keyword">for</span> va <span class="keyword">in</span> favorite_langeages.values():</span><br><span class="line">$<span class="built_in">print</span>(va.title())</span><br></pre></td></tr></table></figure></p><p>8.利用set去除字典中的重复项<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ favorite_langeages = &#123;</span><br><span class="line">$<span class="string">'join'</span>:<span class="string">'c'</span>,</span><br><span class="line">$<span class="string">'jacd'</span>:<span class="string">'python'</span>,</span><br><span class="line">$<span class="string">'mike'</span>:<span class="string">'c++'</span>,</span><br><span class="line">$<span class="string">'fancunjun'</span>:<span class="string">'python'</span></span><br><span class="line">$&#125;</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">print</span>(<span class="string">'以下是利用set集合去除重复项'</span>)</span><br><span class="line">$ <span class="keyword">for</span> val <span class="keyword">in</span> <span class="built_in">set</span>(favorite_langeages.values()):</span><br><span class="line">$<span class="built_in">print</span>(val.title())</span><br></pre></td></tr></table></figure></p><p>9.编写词汇表<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ glossary = &#123;</span><br><span class="line">$<span class="string">'变量'</span>:<span class="string">'是可改变，可以通过变量名来访问变量'</span>,</span><br><span class="line">$<span class="string">'列表'</span>:<span class="string">'存储有序的元素的组合'</span>,</span><br><span class="line">$<span class="string">'元组'</span>:<span class="string">'存储元素，不可被更改'</span>,</span><br><span class="line">$<span class="string">'字典'</span>:<span class="string">'存储一对键值对'</span>,</span><br><span class="line">$<span class="string">'索引'</span>:<span class="string">'元素的下标位置，可通过索引来访问元素'</span>,</span><br><span class="line">$<span class="string">'vscode'</span>:<span class="string">'配置python环境比较难'</span></span><br><span class="line">$ &#125;</span><br><span class="line">$ <span class="built_in">print</span>(<span class="string">'打印字典的键值对'</span>)</span><br><span class="line">$ <span class="keyword">for</span> keys,values <span class="keyword">in</span> glossary.items():</span><br><span class="line">$<span class="built_in">print</span>(keys,values)</span><br></pre></td></tr></table></figure></p><p>10.创建河流字典<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ drivers = &#123;</span><br><span class="line">$<span class="string">'huanghe'</span>:<span class="string">'china'</span>,</span><br><span class="line">$<span class="string">'changjiang'</span>:<span class="string">'china'</span>,</span><br><span class="line"> $<span class="string">'nile'</span>:<span class="string">'egypt'</span></span><br><span class="line">$ &#125;</span><br><span class="line">$ <span class="keyword">for</span> driver <span class="keyword">in</span> drivers.keys():</span><br><span class="line">$<span class="built_in">print</span>(<span class="string">'你好！'</span> + driver)</span><br></pre></td></tr></table></figure></p><p>11.打印字典中的每条河流<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ drivers = &#123;</span><br><span class="line">$<span class="string">'huanghe'</span>:<span class="string">'china'</span>,</span><br><span class="line">$<span class="string">'changjiang'</span>:<span class="string">'china'</span>,</span><br><span class="line">$<span class="string">'nile'</span>:<span class="string">'egypt'</span></span><br><span class="line">$ &#125;</span><br><span class="line">$ <span class="keyword">for</span>  driver_name  <span class="keyword">in</span> drivers.keys():</span><br><span class="line">$<span class="built_in">print</span>(driver_name)</span><br></pre></td></tr></table></figure></p><p>12.打印字典中的每个国家<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ drivers = &#123;</span><br><span class="line">$<span class="string">'huanghe'</span>:<span class="string">'china'</span>,</span><br><span class="line">$<span class="string">'changjiang'</span>:<span class="string">'china'</span>,</span><br><span class="line">$<span class="string">'nile'</span>:<span class="string">'egypt'</span></span><br><span class="line">$ &#125;</span><br><span class="line">$ <span class="keyword">for</span>  value_name  <span class="keyword">in</span> drivers.values():</span><br><span class="line">$<span class="built_in">print</span>(value_name)</span><br></pre></td></tr></table></figure></p><p>13.检查人员是否在调查字典中，如果不在字典邀请参加调查，已经调查的表示感谢<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ favorite_langeages = &#123;</span><br><span class="line">$<span class="string">'join'</span>:<span class="string">'c'</span>,</span><br><span class="line">$<span class="string">'jacd'</span>:<span class="string">'java'</span>,</span><br><span class="line">$<span class="string">'mike'</span>:<span class="string">'c++'</span>,</span><br><span class="line">$<span class="string">'fancunjun'</span>:<span class="string">'python'</span>,</span><br><span class="line">$<span class="string">'wangyao'</span>:<span class="string">'chinese'</span></span><br><span class="line">$&#125;</span><br><span class="line">$ friends = [<span class="string">'join'</span>,<span class="string">'fancunjun'</span>]</span><br><span class="line">$ <span class="keyword">for</span>  name  <span class="keyword">in</span> favorite_langeages.keys():</span><br><span class="line">$<span class="keyword">if</span>  name <span class="keyword">in</span>  friends :</span><br><span class="line">$<span class="built_in">print</span>(<span class="string">'thank you '</span> + name)</span><br><span class="line">$<span class="keyword">else</span>:</span><br><span class="line">$<span class="built_in">print</span>(<span class="string">'请参加我们的调查'</span> + name)</span><br></pre></td></tr></table></figure></p><p>今天小编身体不好，喝点鸡汤补一下……<br><img src="/images/得到与失去.jpg" alt="&#39;得到与失去&#39;"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天继续把学习字典的笔记整事一下，发布出来，请大家指正。&lt;br&gt;1.创建字典&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;b
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Sublime Text3设置python开发环境</title>
    <link href="http://yoursite.com/2018/03/26/Sublime%20Text3%E8%AE%BE%E7%BD%AEpython%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>http://yoursite.com/2018/03/26/Sublime Text3设置python开发环境/</id>
    <published>2018-03-26T00:00:00.000Z</published>
    <updated>2018-03-26T07:32:48.192Z</updated>
    
    <content type="html"><![CDATA[<p>声明：以下内容不是教程，而是小编在实际操作中遇到问题并解决的过程记录整理！</p><p>1.如何显示侧边栏<br>无意不经意间，侧边栏找不到了，这可把我坏了，必须把你找回来，如何所示，简单粗暴：<br><img src="/images/显示侧边栏.png" alt="&#39;显示侧边栏&#39;"><br>效果如下：<br><img src="/images/栏出来.png" alt="&#39;栏出来&#39;"></p><p>2.如何设置显示单屏和多屏，如图所示：<br><img src="/images/双屏.png" alt="&#39;双屏&#39;"></p><p>3.如何设置字体相关，如图点击:<br><img src="/images/设置用户.png" alt="&#39;设置用户&#39;"><br>出现用户设置界面：<br><img src="/images/user.png" alt="&#39;user&#39;"><br>复制代码并保存，及时生效,内容可按自己爱好填写<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  <span class="string">"font_options"</span>: [<span class="string">"no_bold"</span>, <span class="string">"no_italic"</span>, <span class="string">"no_antialias"</span>, <span class="string">"gray_antialias"</span>,], <span class="string">"font_size"</span>: 14, <span class="string">"font_face"</span>: <span class="string">"微软雅黑"</span>,</span><br></pre></td></tr></table></figure></p><p>4.如何查看电脑中已经安装的字体<br>操作快捷键 ctrl + R打开命令行并输入control ,操作电脑Enter键,进入控制面板页面<br><img src="/images/cmd.png" alt="&#39;cmd&#39;"><br>找到【字体】选项并点击进入<br><img src="/images/字体.png" alt="&#39;字体&#39;"><br>显示所有电脑已经安装的字体，可下载字体安装到路径，也可删除字体<br><img src="/images/字体内容.png" alt="&#39;字体内容&#39;"></p><p>未完待续…….<br>福利继续送出<br><img src="/images/百度美女.jpg" alt="&#39;百度美女&#39;"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;声明：以下内容不是教程，而是小编在实际操作中遇到问题并解决的过程记录整理！&lt;/p&gt;
&lt;p&gt;1.如何显示侧边栏&lt;br&gt;无意不经意间，侧边栏找不到了，这可把我坏了，必须把你找回来，如何所示，简单粗暴：&lt;br&gt;&lt;img src=&quot;/images/显示侧边栏.png&quot; alt=&quot;&amp;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>如何利用电脑关闭自启动</title>
    <link href="http://yoursite.com/2018/03/24/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8%E7%94%B5%E8%84%91%E5%85%B3%E9%97%AD%E8%87%AA%E5%90%AF%E7%A8%8B%E5%BA%8F/"/>
    <id>http://yoursite.com/2018/03/24/如何利用电脑关闭自启程序/</id>
    <published>2018-03-24T00:00:00.000Z</published>
    <updated>2018-03-24T23:46:36.118Z</updated>
    
    <content type="html"><![CDATA[<p>今天是星期天，因为没有学习，所以今天就没有学习笔记发了。话说在周五的时候在群里看到如何利用工具访问墙外的世界，没想到还真可行，可是这个小程序添加到了开机自启动程序了，无形之中拉慢了电脑开机运行速度，以前都是360来关闭开机自启动程度，这个方法很简单，就不在赘述了，那我们除了利用360之外还有没有别的方法开关闭开机自启动程序了，答案是肯定的，那就是利用电脑自身来关闭电脑的开机自启动程序，啰嗦了这么多，看官是不是都急了，上正题……</p><p>1.首先利用快捷键ctrl+R打开运行窗口，并输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ msconfig</span><br></pre></td></tr></table></figure></p><p><img src="/images/运行.png" alt="&#39;运行&#39;"></p><p>2 在弹出的系统管理的窗口页面，选择启动，把想禁止开机自启动的程序的勾取消，点击确定，是不是很简单呢！<br><img src="/images/系统设置.png" alt="&#39;系统设置&#39;"></p><p>最后还是给大家来缓解一下疲劳……<br><img src="/images/美女照片.jpg" alt="&#39;美女照片&#39;"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天是星期天，因为没有学习，所以今天就没有学习笔记发了。话说在周五的时候在群里看到如何利用工具访问墙外的世界，没想到还真可行，可是这个小程序添加到了开机自启动程序了，无形之中拉慢了电脑开机运行速度，以前都是360来关闭开机自启动程度，这个方法很简单，就不在赘述了，那我们除了
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>读书笔记之字典I</title>
    <link href="http://yoursite.com/2018/03/23/2018-03-23%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2018/03/23/2018-03-23学习笔记/</id>
    <published>2018-03-23T00:00:00.000Z</published>
    <updated>2018-03-26T02:37:35.637Z</updated>
    
    <content type="html"><![CDATA[<p>今天学习到了字典，字典用一对大括号括起来，字典存储的是一对元素，叫键-值对，使用键可以读取相对应的值。</p><p>1.创建一个外星人的属性字典<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ alien_0 = &#123;<span class="string">'color'</span>:<span class="string">'green'</span>,<span class="string">'poice'</span>:5&#125;</span><br><span class="line">$ <span class="built_in">print</span>(alien_0)</span><br><span class="line">$ <span class="built_in">print</span>(alien_0[<span class="string">'color'</span>])</span><br></pre></td></tr></table></figure></p><p>2.把字典的点数传给新的点数<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ new_poice = alien_0[<span class="string">'poice'</span>]</span><br><span class="line">$ <span class="built_in">print</span>(<span class="string">'you just '</span> + str(new_poice) + <span class="string">'poice'</span>)</span><br></pre></td></tr></table></figure></p><p>3.给外星人添加坐标<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ alien_0[<span class="string">'x_positon'</span>] =0</span><br><span class="line">$ alien_0[<span class="string">'y_positon'</span>] =25</span><br><span class="line">$ <span class="built_in">print</span>(alien_0)</span><br></pre></td></tr></table></figure></p><p>4.创建一个空字典<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ alien_0 = &#123;&#125;</span><br><span class="line">$ alien_0[<span class="string">'color'</span>] = <span class="string">'green'</span></span><br><span class="line">$ alien_0[<span class="string">'points'</span>] = 5</span><br><span class="line">$ <span class="built_in">print</span>(alien_0)</span><br></pre></td></tr></table></figure></p><p>5.修改字典中的值<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ alien_0 = &#123;<span class="string">'color'</span>:<span class="string">'green'</span>&#125;</span><br><span class="line">$ <span class="built_in">print</span>(<span class="string">'the alien is '</span> + alien_0[<span class="string">'color'</span>] + <span class="string">'!'</span>)</span><br><span class="line">$ alien_0[<span class="string">'color'</span>] = <span class="string">'yellow'</span></span><br><span class="line">$ <span class="built_in">print</span>(<span class="string">'the alien is '</span> + alien_0[<span class="string">'color'</span>] + <span class="string">'!'</span>)</span><br></pre></td></tr></table></figure></p><p>6.外星人移动坐标<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ alien_0 = &#123;<span class="string">'x_position'</span>:0,<span class="string">'y_position'</span>:25,<span class="string">'speed'</span>:<span class="string">'medium'</span>&#125;</span><br><span class="line">$ <span class="built_in">print</span>(<span class="string">'x-position is '</span> + str(alien_0[<span class="string">'x_position'</span>]) + <span class="string">"!"</span>)</span><br></pre></td></tr></table></figure></p><p>7.移动外星人<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">if</span> alien_0[<span class="string">'speed'</span>] == <span class="string">'slow'</span>:</span><br><span class="line">$x_increment = 1</span><br><span class="line">$ <span class="keyword">elif</span> alien_0[<span class="string">'speed'</span>] == <span class="string">'medium'</span>:</span><br><span class="line">$x_increment = 2 </span><br><span class="line">$ <span class="keyword">else</span>:</span><br><span class="line">$x_increment = 3</span><br></pre></td></tr></table></figure></p><p>8.把移动的距离值加上原始值上<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ alien_0[<span class="string">'x_position'</span>]= alien_0[<span class="string">'x_position'</span>] + x_increment</span><br><span class="line">$  <span class="built_in">print</span>(<span class="string">"new x-position is "</span> + str(alien_0[<span class="string">'x_position'</span>]))</span><br></pre></td></tr></table></figure></p><p>9.删除键值对<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ alien_0 = &#123;<span class="string">'color'</span>:<span class="string">'green'</span>,<span class="string">'poice'</span>:5&#125;</span><br><span class="line">$ del alien_0[<span class="string">'poice'</span>]</span><br><span class="line">$ <span class="built_in">print</span>(alien_0)</span><br></pre></td></tr></table></figure></p><p>10.创建多行字典<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ favorite_langeages = &#123;</span><br><span class="line">$<span class="string">'join'</span>:<span class="string">'c'</span>,</span><br><span class="line">$<span class="string">'mack'</span>:<span class="string">'python'</span>,</span><br><span class="line">$<span class="string">'licy'</span>:<span class="string">'c++'</span>,</span><br><span class="line">$<span class="string">'lily'</span>:<span class="string">'java'</span></span><br><span class="line">$&#125;</span><br></pre></td></tr></table></figure></p><p>11.打印喜欢的语言<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">print</span>(<span class="string">"join's favorite_langeages is "</span> +</span><br><span class="line">$favorite_langeages[<span class="string">'join'</span>].title() +</span><br><span class="line">$<span class="string">'!'</span></span><br><span class="line">$ )</span><br></pre></td></tr></table></figure></p><p>12.使用字典创建熟人的信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ friend_message = &#123;</span><br><span class="line">$<span class="string">'first_name'</span> :<span class="string">'wang'</span>,</span><br><span class="line">$<span class="string">'last_name'</span> :<span class="string">'tiangui'</span>,</span><br><span class="line">$<span class="string">'age'</span> : 34,</span><br><span class="line">$<span class="string">'city'</span> :<span class="string">'青岛'</span>,</span><br><span class="line">$ &#125;</span><br></pre></td></tr></table></figure></p><p>13.打印熟人的信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">print</span>(friend_message)</span><br></pre></td></tr></table></figure></p><p> 14.创建字典存储朋友喜欢的数字<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ favorite_number = &#123;</span><br><span class="line">$<span class="string">'fancunjun'</span>:8,</span><br><span class="line">$<span class="string">'fanyexuan'</span>:9,</span><br><span class="line">$<span class="string">'chenhuaxia'</span>:10,</span><br><span class="line">$<span class="string">'liuyifei'</span>:3,</span><br><span class="line">$<span class="string">'sunli'</span>:5,</span><br><span class="line">$<span class="string">'yanglan'</span>:23</span><br><span class="line">$&#125;</span><br></pre></td></tr></table></figure></p><p>15.打印字典内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">print</span>(<span class="string">"my friend favorite_numbe,r is "</span>,favorite_number)</span><br></pre></td></tr></table></figure></p><p>16.输出字典中某个朋友喜欢的数字<br>$ print(‘favorite_number is ‘,favorite_number[‘yanglan’])</p><h1 id="最后还是给大家来一波福利…"><a href="#最后还是给大家来一波福利…" class="headerlink" title="最后还是给大家来一波福利….."></a>最后还是给大家来一波福利…..</h1><h1 id=""><a href="#" class="headerlink" title=""></a><img src="/images/射击.jpg" alt="&#39;射击&#39;"></h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天学习到了字典，字典用一对大括号括起来，字典存储的是一对元素，叫键-值对，使用键可以读取相对应的值。&lt;/p&gt;
&lt;p&gt;1.创建一个外星人的属性字典&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>读书笔记汇总</title>
    <link href="http://yoursite.com/2018/03/22/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E6%B1%87%E6%80%BB/"/>
    <id>http://yoursite.com/2018/03/22/读书笔记汇总/</id>
    <published>2018-03-22T00:00:00.000Z</published>
    <updated>2018-03-22T15:26:53.365Z</updated>
    
    <content type="html"><![CDATA[<p>今天的笔记全是一些看书做的练习，看起来会比较乱，各位看官海涵！</p><p>第一部分：<br>1.小编的几个朋友好久不见，小编主动给他们发送了一条问候语<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ name = [<span class="string">"wangtianlai"</span>,<span class="string">"wangxiaomeng"</span>,<span class="string">"wangyao"</span>]</span><br></pre></td></tr></table></figure></p><p>为每个朋友送上祝福<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">print</span>(<span class="string">"how are you"</span> + <span class="string">","</span> + name[0] + <span class="string">"!"</span> )</span><br><span class="line">$ <span class="built_in">print</span>(<span class="string">"how are you"</span> + <span class="string">","</span> + name[1] + <span class="string">"!"</span> )</span><br><span class="line">$ <span class="built_in">print</span>(<span class="string">"how are you"</span> + <span class="string">","</span> + name[2] + <span class="string">"!"</span> )</span><br></pre></td></tr></table></figure></p><p>2.小编做饭手艺不错，要请三个朋友来吃晚饭<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ Guests = [<span class="string">"liuyifei"</span>,<span class="string">"fanbingbing"</span>,<span class="string">"zhangbiyi"</span>]</span><br></pre></td></tr></table></figure></p><p>3.把三个朋友的名字打印到纸上，省得忘记了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ Guests_one = Guests[0]</span><br><span class="line">$ Guests_two = Guests[1]</span><br><span class="line">$ Guests_three = Guests[2]</span><br></pre></td></tr></table></figure></p><p>4.然后给小编有基友发送邀请信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">print</span>(<span class="string">'诚意邀请'</span>,Guests_one + <span class="string">","</span> + Guests_two + <span class="string">","</span> + Guests_three,<span class="string">'来参加周五晚上的宴会'</span>)</span><br></pre></td></tr></table></figure></p><p>5.突然小编接到电话，有一个基友晚上女朋友要来，需要在家收拾床铺，不能前来了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">print</span>(Guests_three,<span class="string">"在家伺候女朋友，不能来参加晚会了！"</span>)</span><br></pre></td></tr></table></figure></p><p>6.少一个基友不行呀，再重新邀请一位日本的朋友，中文名字叫龙泽<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ Guests[2] = <span class="string">"longze"</span></span><br></pre></td></tr></table></figure></p><p>7.重新把名字打印，向每位朋友发出邀请<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ Guests_one = Guests[0]</span><br><span class="line">$ Guests_two = Guests[1]</span><br><span class="line">$ Guests_three = Guests[2]</span><br><span class="line">$ <span class="built_in">print</span>(<span class="string">'诚意邀请'</span>,Guests_one + <span class="string">","</span> + Guests_two + <span class="string">","</span> + Guests_three,<span class="string">'来参加周五晚上的宴会'</span>)</span><br></pre></td></tr></table></figure></p><p>8.小编突然发现一张大桌子，可能坐下更多的人，所以小编决定再多邀请几个来吃饭<br>先在名单开头加一个好友<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ Guests.insert(0,<span class="string">"wangludan"</span>)</span><br></pre></td></tr></table></figure></p><p>9.在名单的中间加一个好友<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ Guests.insert(2,<span class="string">"景德"</span>)</span><br><span class="line">$ <span class="built_in">print</span>(Guests)</span><br></pre></td></tr></table></figure></p><p>10.把一个新朋友添加到名单结尾<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ Guests.append(<span class="string">"神仙姐姐"</span>)</span><br></pre></td></tr></table></figure></p><p>11.重新打印名单<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">print</span>(Guests)</span><br></pre></td></tr></table></figure></p><p>12.突然发现菜不够了，只能宴请两位朋友<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">print</span>(<span class="string">"对不起！我只能邀请两位朋友来参加宴会了!"</span>)</span><br></pre></td></tr></table></figure></p><p>13.删除名单名字，每删除一次，向朋友说明情况<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ Guests.pop()</span><br><span class="line">$ Guests_pop = Guests.pop()</span><br><span class="line">$ <span class="built_in">print</span>(<span class="string">"不好意思"</span>,Guests_pop,<span class="string">"今天晚上不邀请你来参加晚宴了!"</span>)</span><br><span class="line">$ Guests.pop()</span><br><span class="line">$ Guests.pop()</span><br></pre></td></tr></table></figure></p><p>14.再看看还有谁能来吃饭<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">print</span>(Guests)</span><br><span class="line">$ Guests_new_one = Guests[0]</span><br><span class="line">$ Guests_new_two = Guests[1]</span><br></pre></td></tr></table></figure></p><p>15.向剩下的两位朋友发送消息依然可以在邀请之列<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">print</span>(Guests_new_one,Guests_new_two,<span class="string">"很高兴能继续邀请两位来参加宴会!"</span>)</span><br></pre></td></tr></table></figure></p><p>16.大家吃完所了，都走了，名单成空的了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ del Guests[0]</span><br><span class="line">$ del Guests[0]</span><br><span class="line">$ <span class="built_in">print</span>(Guests)</span><br></pre></td></tr></table></figure></p><p>第二部分：<br>1.朋友开了一个蛋糕店，有很多甜点<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pisa = [<span class="string">"芝士"</span>,<span class="string">"奶油"</span>,<span class="string">"蛋糕"</span>,<span class="string">"披萨"</span>,<span class="string">'面包'</span>,<span class="string">'饼干'</span>]</span><br></pre></td></tr></table></figure></p><p>2.我想吃店里的前三样甜点<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">print</span>(<span class="string">'前三个元素'</span>,pisa[0:3])</span><br></pre></td></tr></table></figure></p><p>3.小姐姐想吃中间的三样甜点<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">print</span>(<span class="string">'中间三个元素'</span>,pisa[2:5])</span><br></pre></td></tr></table></figure></p><p>4.老板娘想吃最的的三样甜点<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">print</span>(<span class="string">'后三个元素'</span>,pisa[-3:])</span><br></pre></td></tr></table></figure></p><p>5.小编开了一个跟朋友一模一样的甜点店<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ friend_food = pisa[:]</span><br></pre></td></tr></table></figure></p><p>6.小编自已创造的新产品<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pisa.append(<span class="string">"花生"</span>)</span><br></pre></td></tr></table></figure></p><p>7.朋友也有祖传秘方，生产出一种受欢迎的产品<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ friend_food.append(<span class="string">"大豆"</span>)</span><br></pre></td></tr></table></figure></p><p>8.小编给顾客介绍所有的产品<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">print</span>(<span class="string">'here is my food list'</span>)</span><br><span class="line">$ <span class="keyword">for</span> f <span class="keyword">in</span> pisa:</span><br><span class="line">$ <span class="built_in">print</span>(f)</span><br><span class="line">$ <span class="built_in">print</span>(pisa)</span><br></pre></td></tr></table></figure></p><p>9.朋友也是极力推荐自己的产品<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">print</span>(<span class="string">'my friend food list'</span>)</span><br><span class="line">$ <span class="keyword">for</span> x <span class="keyword">in</span> friend_food:</span><br><span class="line">$ <span class="built_in">print</span>(x)</span><br><span class="line">$ <span class="built_in">print</span>(friend_food)</span><br></pre></td></tr></table></figure></p><p>10.小编喜欢店里的每一样甜点<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">for</span> pi <span class="keyword">in</span> pisa:</span><br><span class="line">$ <span class="built_in">print</span>(<span class="string">"I like"</span>, pi)</span><br><span class="line">$ <span class="built_in">print</span>(<span class="string">"I rellay like"</span>,pisa)</span><br></pre></td></tr></table></figure></p><p>11.小编原来还是一个喜欢动物的爱心人士<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ animal = [<span class="string">'cat'</span>,<span class="string">'dog'</span>,<span class="string">'pig'</span>]</span><br><span class="line">$ <span class="keyword">for</span> x <span class="keyword">in</span> animal:</span><br><span class="line">$ <span class="built_in">print</span>(x ,<span class="string">'is good!'</span>)</span><br><span class="line">$ <span class="built_in">print</span>(<span class="string">'I like animal!'</span>)</span><br></pre></td></tr></table></figure></p><p>12.循环打印1-10的平方，并创建列表<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ squares = []</span><br><span class="line">$ <span class="keyword">for</span> squeare <span class="keyword">in</span> range(1,11):</span><br><span class="line">$ value = squeare**2</span><br><span class="line">$ squares.append(value)</span><br><span class="line">$ <span class="built_in">print</span>(squares)</span><br></pre></td></tr></table></figure></p><p>第三部分：</p><p>1.创建一个列表，循环打印1到10的数字<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">for</span> x <span class="keyword">in</span> range(1,21):</span><br><span class="line">$<span class="built_in">print</span>(x)</span><br></pre></td></tr></table></figure></p><p>2.把1-100的整数创建列表，并求最大，最小值，和所有数据之和<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ number = list(range(1,101))</span><br><span class="line">$ <span class="built_in">print</span>(number)</span><br><span class="line">$ <span class="built_in">print</span>(max(number))</span><br><span class="line">$ <span class="built_in">print</span>(min(number))</span><br><span class="line">$ <span class="built_in">print</span>(sum(number))</span><br></pre></td></tr></table></figure></p><p>2.创建一个列表，包含1到20的奇数，并循环打印出来<br>方法一：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">for</span> y  <span class="keyword">in</span> range(1,20):</span><br><span class="line">$<span class="keyword">if</span> y%2 ==1:</span><br><span class="line">$<span class="built_in">print</span>(y)</span><br></pre></td></tr></table></figure></p><p>方法二：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ number = list(range(1,20,2))</span><br><span class="line">$ <span class="keyword">for</span> x <span class="keyword">in</span> number:</span><br><span class="line">$<span class="built_in">print</span>(x)</span><br><span class="line">$ <span class="built_in">print</span>(number)</span><br></pre></td></tr></table></figure></p><p>3.创建一个列表，包含3到30之间能被3整除的数字，然后循环打印出来<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ num = list(range(3,30,3))</span><br><span class="line">$ <span class="keyword">for</span> n <span class="keyword">in</span> num:</span><br><span class="line">$<span class="built_in">print</span>(n)</span><br><span class="line"><span class="variable">$print</span>(num)</span><br></pre></td></tr></table></figure></p><p>4.创建一个列表，包含1到10整数的立方，并打印出来<br>方法一：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ number = list((i**3 <span class="keyword">for</span> i <span class="keyword">in</span> range(1,11)))</span><br><span class="line">$ <span class="keyword">for</span> x <span class="keyword">in</span> number:</span><br><span class="line">$<span class="built_in">print</span>(x)</span><br><span class="line"><span class="variable">$print</span>(number)</span><br></pre></td></tr></table></figure></p><p>方法二:(解析表达式)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ jiexi = [w**3 <span class="keyword">for</span> w <span class="keyword">in</span> range(1,11)]</span><br><span class="line">$ <span class="built_in">print</span>(jiexi)</span><br></pre></td></tr></table></figure></p><p>5.创建一个元组,并打印元组元素<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">print</span>(<span class="string">'here is old foods'</span>)</span><br><span class="line">$ foods = (<span class="string">'大虾'</span>,<span class="string">'烤肉'</span>,<span class="string">'鸡肝'</span>,<span class="string">'哈利'</span>,<span class="string">'海红'</span>)</span><br><span class="line">$ <span class="keyword">for</span> food <span class="keyword">in</span> foods:</span><br><span class="line">$<span class="built_in">print</span>(food)</span><br></pre></td></tr></table></figure></p><p>6.修改其中的一个元素，系统报错.f元组元素不可修改<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ foods[0] = <span class="string">'河虾'</span></span><br></pre></td></tr></table></figure></p><p>7.重新定义元组<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">print</span>(<span class="string">'here is new foods'</span>)</span><br><span class="line">$ new_foods = (<span class="string">'虾皮'</span>,<span class="string">'烤肉'</span>,<span class="string">'鱿鱼'</span>,<span class="string">'哈利'</span>,<span class="string">'海红'</span>)</span><br><span class="line">$ <span class="keyword">for</span> x <span class="keyword">in</span> new_foods:</span><br><span class="line">$<span class="built_in">print</span>(x)</span><br></pre></td></tr></table></figure></p><p>8.比较两个字符串是否相等<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ a = <span class="string">'alex'</span></span><br><span class="line">$ b = <span class="string">"alox"</span></span><br><span class="line"><span class="built_in">print</span>(a != b )</span><br></pre></td></tr></table></figure></p><p>9.使用lower()进行比较<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ a = <span class="string">'alEX'</span></span><br><span class="line">$ b = <span class="string">"alx"</span></span><br><span class="line"><span class="built_in">print</span>(a.lower() == b)</span><br></pre></td></tr></table></figure></p><p>第四部分：<br>1.判断外星人颜色-001<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ alien_color = <span class="string">"green"</span></span><br><span class="line">$ <span class="keyword">if</span> alien_color == <span class="string">'green'</span>:</span><br><span class="line">$<span class="built_in">print</span>(<span class="string">'恭喜你，获得五个金点值!'</span>)</span><br></pre></td></tr></table></figure></p><p>2.判断外星人颜色-002<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ alien_color = <span class="string">"red"</span></span><br><span class="line">$ <span class="keyword">if</span> alien_color == <span class="string">'green'</span>:</span><br><span class="line">$<span class="built_in">print</span>(<span class="string">'恭喜你，获得五个金点值!'</span>)</span><br></pre></td></tr></table></figure></p><p>3.判断外星人颜色-003<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ alien_color = <span class="string">'green'</span></span><br><span class="line">$ <span class="keyword">if</span> alien_color == <span class="string">'green'</span>:</span><br><span class="line">$<span class="built_in">print</span>(<span class="string">"获得10个点"</span>)</span><br><span class="line">$ <span class="keyword">else</span>:</span><br><span class="line">$<span class="built_in">print</span>(<span class="string">'你没有射击外星人'</span>)</span><br></pre></td></tr></table></figure></p><p>4.判断外星人颜色-004<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ alien_color = <span class="string">'yellow'</span></span><br><span class="line">$ <span class="keyword">if</span> alien_color == <span class="string">'green'</span>:</span><br><span class="line">$<span class="built_in">print</span>(<span class="string">"获得10个点"</span>)</span><br><span class="line">$ <span class="keyword">else</span>:</span><br><span class="line">$<span class="built_in">print</span>(<span class="string">'你没有射击外星人'</span>)</span><br></pre></td></tr></table></figure></p><p>5.判断外星人-005<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">alien_color = <span class="string">'red'</span></span><br><span class="line"><span class="keyword">if</span> alien_color == <span class="string">'green'</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'你获得5个金点'</span>)</span><br><span class="line"><span class="keyword">elif</span> alien_color == <span class="string">'yellow'</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'你获得10个金点'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'你获得15个金点'</span>)</span><br></pre></td></tr></table></figure></p><p>6.判断人的一生阶段<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">age = 89</span><br><span class="line"><span class="keyword">if</span> age &lt; 2:</span><br><span class="line">prin(<span class="string">'you are baby!'</span>)</span><br><span class="line"><span class="keyword">elif</span> age &gt;=2 and age &lt;4:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'你正在蹒跚学步'</span>)</span><br><span class="line"><span class="keyword">elif</span> age &gt;=4 and age &lt;13:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'你是一个儿童'</span>)</span><br><span class="line"><span class="keyword">elif</span> age &gt;=13 and age &lt; 20:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'you are young!'</span>)</span><br><span class="line"><span class="keyword">elif</span> age &gt;=20 and age &lt;65:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'你是成年人!'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'你是老年人'</span>)</span><br></pre></td></tr></table></figure></p><p>7.小姐姐喜欢吃的水果<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">favorite_fruits = [<span class="string">'apple'</span>,<span class="string">'banane'</span>,<span class="string">'orange'</span>] </span><br><span class="line"><span class="keyword">if</span> <span class="string">'apple'</span> <span class="keyword">in</span> favorite_fruits:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'I like apple'</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="string">'banane'</span> <span class="keyword">in</span> favorite_fruits:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'i like banane'</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="string">'orange'</span> <span class="keyword">in</span> favorite_fruits:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'i like orange'</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="string">'taozi'</span> <span class="keyword">in</span> favorite_fruits:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'i like taozi'</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="string">'lizi'</span> not <span class="keyword">in</span> favorite_fruits:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'我不喜欢吃lii'</span>)</span><br></pre></td></tr></table></figure></p><p>8.客人点菜系统<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">shoping = [<span class="string">'土豆丝'</span>,<span class="string">'黄瓜'</span>,<span class="string">'西红柿'</span>]</span><br><span class="line"><span class="keyword">for</span> shop <span class="keyword">in</span> shoping:</span><br><span class="line"><span class="keyword">if</span> shop == <span class="string">'土豆丝'</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'sorry,tuousi is empty!'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"adding"</span> + shop + <span class="string">'.'</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"finish the shoping "</span>)</span><br></pre></td></tr></table></figure></p><p>9.创建用户列表<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">user_list = [<span class="string">'join'</span>,<span class="string">'jack'</span>,<span class="string">'mike'</span>,<span class="string">'admin'</span>,<span class="string">'lily'</span>]</span><br><span class="line">user_list = []</span><br><span class="line"><span class="keyword">if</span> user_list == []:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'we need some users!'</span>)</span><br><span class="line"><span class="keyword">for</span> user <span class="keyword">in</span> user_list:</span><br><span class="line"><span class="keyword">if</span> user == <span class="string">'admin'</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'you are admin user ,you can do anything!'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'welcome login!'</span>)</span><br><span class="line">user_list.clear()</span><br><span class="line"><span class="built_in">print</span>(user_list)</span><br></pre></td></tr></table></figure></p><p>10.判断注册用户是否有效<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">current_users = [<span class="string">'lucy'</span>,<span class="string">'lily'</span>,<span class="string">'black'</span>,<span class="string">'mike'</span>,<span class="string">'jack'</span>] </span><br><span class="line">new_users = [<span class="string">'lucy'</span>,<span class="string">'liuyifei'</span>,<span class="string">'black'</span>,<span class="string">'tangyan'</span>,<span class="string">'jack'</span>] </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> user <span class="keyword">in</span> new_users:</span><br><span class="line"><span class="keyword">if</span> user.lower() <span class="keyword">in</span> current_users:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'username is userd!'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'username is not userd！'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">'login is finished!'</span>)</span><br></pre></td></tr></table></figure></p><p>11.打印序数<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">number_list = [1,2,3,4,5,6,7,8,9]</span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> number_list:</span><br><span class="line"><span class="keyword">if</span> y == 1:</span><br><span class="line"><span class="built_in">print</span>(str(y)+ <span class="string">'st'</span>)</span><br><span class="line"><span class="keyword">elif</span> y == 2:</span><br><span class="line"><span class="built_in">print</span>(str(y)+<span class="string">'nd'</span>)</span><br><span class="line"><span class="keyword">elif</span> y ==3:</span><br><span class="line"><span class="built_in">print</span>(str(y) + <span class="string">'rd'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(str(y)+<span class="string">'th'</span>)</span><br></pre></td></tr></table></figure></p><p>今天的笔记全部都在这了，算一算写了不少代码呀，哈哈。光整理就一个多小时，给自己加油，继续努力！<br>累了一天了，是时候让小姐姐出场了，给小编按摩一下……<br><img src="/images/肚皮.jpg" alt="&#39;肚皮&#39;"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天的笔记全是一些看书做的练习，看起来会比较乱，各位看官海涵！&lt;/p&gt;
&lt;p&gt;第一部分：&lt;br&gt;1.小编的几个朋友好久不见，小编主动给他们发送了一条问候语&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CentOS6.9桌面系统安装五笔输入法</title>
    <link href="http://yoursite.com/2018/03/21/CentOS6.9%E6%A1%8C%E9%9D%A2%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E4%BA%94%E7%AC%94%E8%BE%93%E5%85%A5%E6%B3%95%20/"/>
    <id>http://yoursite.com/2018/03/21/CentOS6.9桌面系统安装五笔输入法 /</id>
    <published>2018-03-21T07:34:51.328Z</published>
    <updated>2018-03-21T07:53:44.716Z</updated>
    
    <content type="html"><![CDATA[<p>今天跟大家说一下在CentOS6.9下安装上五笔输入法，因为一直想用linux工作，输入法是个问题，好久才找到在CentOS中安装上输入法，进行简单的工作旅程，开启linux大门……</p><p>1.首先要安装完成linux桌面的系统，然后开启命令行模式，安装软件需要切换到root权限下。<br><img src="/images/切换root.png" alt="&quot;切换root&quot;"></p><p>2.删除系统的输入框架<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum remove ibus</span><br></pre></td></tr></table></figure></p><p>3.安装五笔输入法<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install ibus ibus-table-wubi</span><br></pre></td></tr></table></figure></p><p>4.安装过程中提示全部确认执行<br>5.然后关闭命令行模式，点击左上角的设置功能菜单<br><img src="/images/设置.png" alt="&quot;设置&quot;"></p><p>6.选择输入法选项功能菜单<br><img src="/images/输入法1.png" alt="&quot;输入法1&quot;"></p><p>7.添加输入法<br><img src="/images/输入法选择.png" alt="&quot;输入法选择&quot;"><br>8.为了能一次性成功，添加完成后重启系统，在桌面右上角就会出现输入法的图标，点击就可选择输入法<br><img src="/images/图标.png" alt="&quot;图标&quot;"></p><p>至此，我们已经可以在linux中使用五笔输入法，虽然比较老，但是总比没有强吧！</p><p>好了，福利出现的时间到了，小伙伴们准备好手纸，尽情欣赏吧！<br><img src="/images/美女一号.jpg" alt="&quot;美女一号&quot;"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天跟大家说一下在CentOS6.9下安装上五笔输入法，因为一直想用linux工作，输入法是个问题，好久才找到在CentOS中安装上输入法，进行简单的工作旅程，开启linux大门……&lt;/p&gt;
&lt;p&gt;1.首先要安装完成linux桌面的系统，然后开启命令行模式，安装软件需要切换
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CentOS6.9桌面系统安装VMware tools实例</title>
    <link href="http://yoursite.com/2018/03/21/CentOS6.9%E6%A1%8C%E9%9D%A2%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85VMware%20tools%E5%AE%9E%E4%BE%8B%20/"/>
    <id>http://yoursite.com/2018/03/21/CentOS6.9桌面系统安装VMware tools实例 /</id>
    <published>2018-03-21T00:00:00.000Z</published>
    <updated>2018-03-21T15:18:12.227Z</updated>
    
    <content type="html"><![CDATA[<p>最近几天一在折腾Linux虚拟机系统，一坐就是几个小时，安装完虚拟机系统后，桌面系统不能满屏，这让人很是难受，于是下决定搞定这问题<br>了解到设置满屏需要首先安装VMware tools以提高虚拟机的性能，所以下面我们来实际说一下如何安装VMware tools<br>1.打开安装的虚拟机，点击安装VMware tools,<br><img src="/images/安装vmware1.png" alt="&quot;安装vmware1&quot;"><br>因为我已经安装了，所以显示重新安装，如果没有安装，就会显示安装VMware tools,点击以后，稍等就会自动弹出一个页面，显示VMware tools的压缩文件，然后我们打开命令行</p><p>2.输入命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir /media/mnt</span><br></pre></td></tr></table></figure></p><p>来创建挂载目录点<br><img src="/images/创建目录.png" alt="&quot;创建目录&quot;"></p><p>3.切换到VMware tools的压缩文件所在的目录，执行命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp VMwareTools-10.2.0-7259539.tar.gz /media/mnt</span><br></pre></td></tr></table></figure></p><p><img src="/images/复制.png" alt="&quot;复制&quot;"></p><p>4.切换到 /media/mnt目录，并使用解压命令把压缩文件解压<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /media/mnt</span><br><span class="line">$ tar zxvf VMwareTools-10.2.0-7259539.tar.gz</span><br></pre></td></tr></table></figure></p><p><img src="/images/解压.png" alt="&quot;解压&quot;"></p><p>5.切换到解压完成的目录中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> vmware-tools-distrib/</span><br></pre></td></tr></table></figure></p><p><img src="/images/解压目录.png" alt="&quot;解压目录&quot;"></p><p>6.执行安装文件命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./vmware-install.pl</span><br></pre></td></tr></table></figure></p><p>7.安装过程中一路enter或者yes<br>8.安装完成重启虚拟机。<br>9.点击虚拟机的编辑–首选项，弹出如下界面：<br><img src="/images/设置满屏.png" alt="&quot;设置满屏&quot;"><br>勾选自动适应客户机，此时虚拟机已经可以满屏显示了，看一效果，激动吗？<br><img src="/images/成功.png" alt="&quot;成功&quot;"></p><p>工作结束，是时候放松一下了……</p><p><img src="/images/美女二号.jpg" alt="&quot;美女二号&quot;">]</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近几天一在折腾Linux虚拟机系统，一坐就是几个小时，安装完虚拟机系统后，桌面系统不能满屏，这让人很是难受，于是下决定搞定这问题&lt;br&gt;了解到设置满屏需要首先安装VMware tools以提高虚拟机的性能，所以下面我们来实际说一下如何安装VMware tools&lt;br&gt;1
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Subline Text3中文注释乱码解决实例</title>
    <link href="http://yoursite.com/2018/03/20/subline%20text3%E4%B8%AD%E6%96%87%E6%B3%A8%E9%87%8A%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3/"/>
    <id>http://yoursite.com/2018/03/20/subline text3中文注释乱码解决/</id>
    <published>2018-03-20T15:26:00.888Z</published>
    <updated>2018-03-21T04:49:26.777Z</updated>
    
    <content type="html"><![CDATA[<p>学习python当中，需要一款界面简洁漂亮又功能强大的文本编辑器，Subline Text3是一个不错的选择，由于电脑中装了两个版本的python，所以在subline 运行python代码过程中，由于是默认python2进行编译，添加的代码中文注释会出现乱码，编译不出内容的情况，经过多次试验以后再找出一个解决办法，现将实际的解决过程记录下来，供大家和自己备查。</p><p>1.选择工具–编译系统–新编译系统<br><img src="/images/新建编译系统.jpg" alt="&quot;编译系统&quot;"></p><p>2.打开一个新编译系统<br><img src="/images/新的编译系统.jpg" alt="&quot;新编译系统&quot;"></p><p>3.添加以下内容(打开的新文件里)<br><img src="/images/添加代码.jpg" alt="&quot;添加内容&quot;"></p><p>附上代码供需要者自取：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"cmd"</span>:[<span class="string">"C:/python-3.5.4-embed-amd64/python3.exe"</span>, <span class="string">"-u"</span>, <span class="string">"<span class="variable">$file</span>"</span>],</span><br><span class="line"></span><br><span class="line"> <span class="string">"file_regex"</span>: <span class="string">"^[ ]*File \"(...*?)\", line ([0-9]*)"</span>,</span><br><span class="line"></span><br><span class="line"> <span class="string">"selector"</span>: <span class="string">"source.python"</span></span><br></pre></td></tr></table></figure></p><p>4.注意代码中的路径一定要更换成自己的python3安装路径，如果是复制的路径，一定要把斜线换成反斜线才能正确识别</p><p>5.点击文件–另存为或者快捷键ctrl+shift+s,文件保存在默认路径下，文件名修改成图中所示，<br><img src="/images/另存为.jpg" alt="&quot;另存为&quot;"></p><p>6.然后就能选择python3进行编译了，中文注释乱码的问题也就解决了<br><img src="/images/选择python3.jpg" alt="&quot;选择&quot;"></p><p>按照小编习惯，最后送上一波福利……</p><p><img src="/images/三点.jpeg" alt="&quot;三点&quot;"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;学习python当中，需要一款界面简洁漂亮又功能强大的文本编辑器，Subline Text3是一个不错的选择，由于电脑中装了两个版本的python，所以在subline 运行python代码过程中，由于是默认python2进行编译，添加的代码中文注释会出现乱码，编译不出内容
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>linux下python2.6升级到python2.7</title>
    <link href="http://yoursite.com/2018/03/20/linux%E4%B8%8Bpython2.6%E5%8D%87%E7%BA%A7%E5%88%B0python2.7/"/>
    <id>http://yoursite.com/2018/03/20/linux下python2.6升级到python2.7/</id>
    <published>2018-03-20T00:00:00.000Z</published>
    <updated>2018-03-20T10:30:29.665Z</updated>
    
    <content type="html"><![CDATA[<p>1.下载python2.7版本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://www.python.org/ftp/python/2.7.6/Python-2.7.6.tgz</span><br></pre></td></tr></table></figure></p><p>2.解压并进行入到文件夹<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar -zxvf Python-2.7.6.tgz &amp;&amp; <span class="built_in">cd</span> Python-2.7.6</span><br></pre></td></tr></table></figure></p><p>3.编译安装并清除缓存<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./configure &amp;&amp; make all &amp;&amp; make install &amp;&amp; make clean &amp;&amp; make distclean</span><br></pre></td></tr></table></figure></p><p>4.检查安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/<span class="built_in">local</span>/bin/python2.7 -V</span><br></pre></td></tr></table></figure></p><p>5.建立软连接，使用系统默认的python指向<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mv /usr/bin/python /usr/bin/python2.6.6</span><br><span class="line">$ ln -s /usr/<span class="built_in">local</span>/bin/python2.7 /usr/bin/python</span><br></pre></td></tr></table></figure></p><p>6.检查<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python -V</span><br></pre></td></tr></table></figure></p><p><img src="/images/版本检查.png" alt="“版本检查”"></p><p>7.用yum需注意<br>解决系统 Python 软链接指向 Python2.7 版本后，因为yum是不兼容 Python 2.7的，所以yum不能正常工作，我们需要指定 yum 的Python版本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ vim /usr/bin/yum </span><br><span class="line">将头部</span><br><span class="line">$ <span class="comment">#!/usr/bin/python 改成</span></span><br><span class="line">$ <span class="comment">#!/usr/bin/python2.6</span></span><br></pre></td></tr></table></figure></p><p>(刚刚备份的)</p><p>8.验证安装<br><img src="/images/123.png" alt="“123”"></p><p>最后送上一波福利……</p><p><img src="/images/meimei.jpg" alt="“meimei”"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.下载python2.7版本&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/14/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%BB%83%E4%B9%A0/"/>
    <id>http://yoursite.com/2018/03/14/基础知识练习/</id>
    <published>2018-03-14T01:10:21.224Z</published>
    <updated>2018-03-14T01:10:21.224Z</updated>
    
    <content type="html"><![CDATA[<p>1.执行python脚本的两种方式？<br>    (1) 在文件夹中创建后缀为.py的文件，然后在windows命令行中输入python+.py文件所在的路径<br>    (2) 安装pycharm工具，右键run脚本或者点击菜单中的插按键</p><p>2.简述位，字节的关系？<br>    1字节=8位。<br>    位 bit (比特)(Binary Digits)：存放一位二进制数，即 0 或 1，最小的存储单位。[英文缩写：b(固定小写)]<br>    字节byte：8个二进制位为一个字节(B)，最常用的单位。<br>    1 Kilo Byte（KB） = 1024 (2^10) byte<br>    1 Mega Byte（MB） = 1024 KB<br>    1 Giga Byte （GB）= 1024 MB<br>    1 Tera Byte（TB）= 1024 GB<br>    1 Peta Byte（PB） = 1024 TB<br>    1 Exa Byte（EB） = 1024 PB<br>    1 Zetta Byte（ZB） = 1024 EB<br>    1Yotta Byte（YB）= 1024 ZB<br>    1 Bronto Byte（BB） = 1024 YB<br>    1Nona Byte（NB）=1024 BB<br>    1 Dogga Byte（DB）=1024 NB<br>    1 Corydon Byte（CB）=1024DB</p><p>3.简述ascll,unicode,utf-8和gbk的关系？<br>4.请写出”李杰”分别用utf-8和gbk编码所占的位数？<br>5.python单行注释和多行注释分别用什么表示？<br>    (1) python单行注释用符号：#<br>    (2) python多行注释开始和结尾添加符号：”””<br>6.声明变量的注意事项是什么？<br>7.如何有一个变量n1=5,请使用int提供的方法，得到该变量最少可用多少个二进制位表示？<br>8.布尔值分别有什么？<br>    布尔值分为：True和Flase<br>9.阅读代码，请写出执行结果？<br>    temp = “alex”<br>    s = temp.capitalize()<br>    print(temp)<br>    print(s)<br>执行结果：temp=&gt;alex,s =&gt; Alex</p><p>附：<br>集合<br>1 无序<br>2不同元素组成<br>3集合中元素必须是不可变类型</p><p>10.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.执行python脚本的两种方式？&lt;br&gt;    (1) 在文件夹中创建后缀为.py的文件，然后在windows命令行中输入python+.py文件所在的路径&lt;br&gt;    (2) 安装pycharm工具，右键run脚本或者点击菜单中的插按键&lt;/p&gt;
&lt;p&gt;2.简述位，字
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>centos设置vim+python的IDE开发环境</title>
    <link href="http://yoursite.com/2018/03/13/centos%E8%AE%BE%E7%BD%AEvim-python%E7%9A%84IDE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>http://yoursite.com/2018/03/13/centos设置vim-python的IDE开发环境/</id>
    <published>2018-03-13T09:56:04.000Z</published>
    <updated>2018-03-19T11:44:49.745Z</updated>
    
    <content type="html"><![CDATA[<p>1.系统环境查看</p><p>[root@fancunjun python]# cat /etc/redhat-release<br>CentOS release 6.9 (Final)<br>[root@fancunjun python]# unname<br>-bash: unname: command not found<br>[root@fancunjun python]# uname<br>Linux<br>[root@fancunjun python]# uname -a<br>Linux fancunjun 2.6.32-696.el6.x86_64 #1 SMP Tue Mar 21 19:29:05 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux</p><p>2.这一步一定要有+python选项</p><p>[root@fancunjun python]# vim –version<br>VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Dec 21 2016 17:10:41)<br>Included patches: 1-207, 209-629<br>Modified by <a href="mailto:&#x62;&#117;&#x67;&#x7a;&#105;&#108;&#x6c;&#x61;&#x40;&#x72;&#x65;&#x64;&#x68;&#97;&#x74;&#46;&#x63;&#x6f;&#x6d;" target="_blank" rel="noopener">&#x62;&#117;&#x67;&#x7a;&#105;&#108;&#x6c;&#x61;&#x40;&#x72;&#x65;&#x64;&#x68;&#97;&#x74;&#46;&#x63;&#x6f;&#x6d;</a><br>Compiled by <a href="mailto:&#98;&#117;&#103;&#122;&#105;&#x6c;&#x6c;&#97;&#x40;&#x72;&#101;&#100;&#104;&#x61;&#x74;&#x2e;&#x63;&#x6f;&#x6d;" target="_blank" rel="noopener">&#98;&#117;&#103;&#122;&#105;&#x6c;&#x6c;&#97;&#x40;&#x72;&#101;&#100;&#104;&#x61;&#x74;&#x2e;&#x63;&#x6f;&#x6d;</a><br>Huge version without GUI.  Features included (+) or not (-):<br>+acl             +farsi           +mouse_netterm   +syntax<br>+arabic          +file_in_path    +mouse_sgr       +tag_binary<br>+autocmd         +find_in_path    -mouse_sysmouse  +tag_old_static<br>-balloon_eval    +float           +mouse_urxvt     -tag_any_white<br>-browse          +folding         +mouse_xterm     -tcl<br>++builtin_terms  -footer          +multi_byte      +terminfo<br>+byte_offset     +fork()          +multi_lang      +termresponse<br>+cindent         +gettext         -mzscheme        +textobjects<br>-clientserver    -hangul_input    +netbeans_intg   +title<br>-clipboard       +iconv           +path_extra      -toolbar<br>+cmdline_compl   +insert_expand   +perl            +user_commands<br>+cmdline_hist    +jumplist        +persistent_undo +vertsplit<br>+cmdline_info    +keymap          +postscript      +virtualedit<br>+comments        +langmap         +printer         +visual<br>+conceal         +libcall         +profile         +visualextra<br>+cryptv          +linebreak       #+python/dyn      +viminfo<br>+cscope          +lispindent      -python3         +vreplace<br>+cursorbind      +listcmds        +quickfix        +wildignore<br>+cursorshape     +localmap        +reltime         +wildmenu<br>+dialog_con      -lua             +rightleft       +windows<br>+diff            +menu            -ruby            +writebackup<br>+digraphs        +mksession       +scrollbind      -X11<br>-dnd             +modify_fname    +signs           -xfontset<br>-ebcdic          +mouse           +smartindent     -xim<br>+emacs_tags      -mouseshape      -sniff           -xsmp<br>+eval            +mouse_dec       +startuptime     -xterm_clipboard<br>+ex_extra        +mouse_gpm       +statusline      -xterm_save<br>+extra_search    -mouse_jsbterm   -sun_workshop    -xpm<br>   system vimrc file: “/etc/vimrc”<br>     user vimrc file: “$HOME/.vimrc”<br> 2nd user vimrc file: “~/.vim/vimrc”<br>      user exrc file: “$HOME/.exrc”<br>  fall-back for $VIM: “/etc”<br> f-b for $VIMRUNTIME: “/usr/share/vim/vim74”<br>Compilation: gcc -c -I. -Iproto -DHAVE_CONFIG_H     -O2 -g -pipe -Wall -fexceptions -fstack-protector –param=ssp-buffer-size=4 -m64 -mtune=generic -D_GNU_SOURCE -D_FILE_OFFSET_BITS=64 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1<br>Linking: gcc   -Wl,-E -Wl,-rpath,/usr/lib64/perl5/CORE   -L/usr/local/lib -Wl,–as-needed -o vim        -lm -lnsl  -lselinux  -ltinfo -lacl -lattr -lgpm   -Wl,-E -Wl,-rpath,/usr/lib64/perl5/CORE  -fstack-protector  -L/usr/lib64/perl5/CORE -lperl -lresolv -lnsl -ldl -lm -lcrypt -lutil -lpthread -lc       </p><p>四.安装pip（pip-9.0）</p><p>wget <a href="https://pypi.python.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz#md5=35f01da33009719497f01a4ba69d63c9" target="_blank" rel="noopener">https://pypi.python.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz#md5=35f01da33009719497f01a4ba69d63c9</a>  #pip下载，官网去下载。<br>tar zxf pip-9.0.1.tar.gz<br>cd pip-9.0.1<br>python3 setup.py install</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.系统环境查看&lt;/p&gt;
&lt;p&gt;[root@fancunjun python]# cat /etc/redhat-release&lt;br&gt;CentOS release 6.9 (Final)&lt;br&gt;[root@fancunjun python]# unname&lt;br&gt;-bas
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python字典魔法</title>
    <link href="http://yoursite.com/2018/03/07/python%E5%AD%97%E5%85%B8%E9%AD%94%E6%B3%95/"/>
    <id>http://yoursite.com/2018/03/07/python字典魔法/</id>
    <published>2018-03-06T20:40:37.000Z</published>
    <updated>2018-03-20T03:43:10.389Z</updated>
    
    <content type="html"><![CDATA[<p>在hexo中创建博客，纯文字会显得枯燥，阅读性差，那我们就来说一下如何在创建博客加入图片，增加阅读性。</p><p> <img src="/images/充电加油.png" alt="“给自己一个加油”"><br> <img src="D:\hexo\blog\source\images/py2.7.png" alt="py2.7"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在hexo中创建博客，纯文字会显得枯燥，阅读性差，那我们就来说一下如何在创建博客加入图片，增加阅读性。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;/images/充电加油.png&quot; alt=&quot;“给自己一个加油”&quot;&gt;&lt;br&gt; &lt;img src=&quot;D:\hexo\blog\sourc
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python列表的list魔法</title>
    <link href="http://yoursite.com/2018/03/06/python%E5%88%97%E8%A1%A8%E7%9A%84list%E9%AD%94%E6%B3%95/"/>
    <id>http://yoursite.com/2018/03/06/python列表的list魔法/</id>
    <published>2018-03-06T14:10:48.000Z</published>
    <updated>2018-03-22T02:30:08.044Z</updated>
    
    <content type="html"><![CDATA[<p>今天我们来谈一下什么是列表？<br>In a word ! 列表就是一系统按特定顺序排列的元素组成！列表中可以是数字，字符，列表中可以放任何你想放的东西。so,我们闲言少叙，马上来创建一个属于你的列表车库吧！</p><p>创建您的车库列表：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cars = [<span class="string">"bmw"</span>,<span class="string">"benzhi"</span>,<span class="string">"aodi"</span>,<span class="string">"falili"</span>,<span class="string">"yema"</span>]</span><br></pre></td></tr></table></figure></p><p>今天小编要去约会小姐姐，车库里有很多车，我们要开那一辆出去呢？经过打探，小姐姐喜欢野马，那小编就开野马去约会了。<br>上一张小姐姐的约会照片吧……<br><img src="/images/小姐姐.jpg" alt="&quot;小姐姐&quot;"><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">drive = cars[4]</span><br><span class="line"><span class="built_in">print</span>(drive)</span><br></pre></td></tr></table></figure></p><p>现在，小姐姐和小编已经上车了，车一直在晃动…… 请各位自行脑补车晃动的原因……</p><p>1.添加内容在列表尾部<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ li = [1,2,3,<span class="string">"wang"</span>]</span><br><span class="line">$ li.append(19)</span><br><span class="line">$ <span class="built_in">print</span>(li)</span><br></pre></td></tr></table></figure></p><p>输出结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1, 2, 3, <span class="string">'wang'</span>, 19]</span><br></pre></td></tr></table></figure></p><p>2.清空列表<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ li = [1,2,3,<span class="string">"wang"</span>]</span><br><span class="line">$ li.clear()</span><br><span class="line">$ <span class="built_in">print</span>(li)</span><br></pre></td></tr></table></figure></p><p>输出结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[]</span><br></pre></td></tr></table></figure></p><p>3.复制li列表<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ li = [1,2,3,<span class="string">"wang"</span>]</span><br><span class="line">$ li.copy()</span><br><span class="line">$ <span class="built_in">print</span>(li)</span><br></pre></td></tr></table></figure></p><p>输出结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">li = [1,2,3,<span class="string">"wang"</span>]</span><br></pre></td></tr></table></figure></p><p>4.返回输入值的出现次数<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ li = [1,2,3,<span class="string">"wang"</span>]</span><br><span class="line">$ s = li.count(3)</span><br><span class="line">$ <span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure></p><p>输出结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure></p><p>5.通过附加迭代元素来扩展列表<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ li = [1,2,3,<span class="string">"wang"</span>]</span><br><span class="line">$ li1 = [1,2,3,<span class="string">"fan"</span>,<span class="string">"cun"</span>,<span class="string">"jun"</span>]</span><br><span class="line">$ li.extend(li1)</span><br><span class="line">$ <span class="built_in">print</span>(li)</span><br></pre></td></tr></table></figure></p><p>输出结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1, 2, 3, <span class="string">'wang'</span>, 1, 2, 3, <span class="string">'fan'</span>, <span class="string">'cun'</span>, <span class="string">'jun'</span>]</span><br></pre></td></tr></table></figure></p><p>6.获取传入值的下标索引<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ li = [1,2,3,<span class="string">"wang"</span>]</span><br><span class="line">$ s =li.index(3)</span><br><span class="line">$ <span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure></p><p>输出结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure></p><p>7.通过索引位置插入列表元素<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ li = [1,2,3,<span class="string">"wang"</span>]</span><br><span class="line">$ li.insert(0,<span class="string">"fan"</span>)</span><br><span class="line">$ <span class="built_in">print</span>(li)</span><br></pre></td></tr></table></figure></p><p>输出结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">'fan'</span>, 1, 2, 3, <span class="string">'wang'</span>]</span><br></pre></td></tr></table></figure></p><p>8.随机删除列表元素<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ li = [1,2,3,<span class="string">"wang"</span>]</span><br><span class="line">$ li.pop()</span><br><span class="line">$ <span class="built_in">print</span>(li)</span><br></pre></td></tr></table></figure></p><p>输出结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1, 2, 3]</span><br></pre></td></tr></table></figure></p><p>9.通过索引删除列表元素<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ li = [1,2,3,<span class="string">"wang"</span>]</span><br><span class="line">$ li.pop(3)</span><br><span class="line">$ <span class="built_in">print</span>(li)</span><br></pre></td></tr></table></figure></p><p>输出结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1, 2, 3]</span><br></pre></td></tr></table></figure></p><p>10.删除指定元素，列表中没有元素报错<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ li = [1,2,3,<span class="string">"wang"</span>]</span><br><span class="line">$ li.remove(<span class="string">"wang"</span>)</span><br><span class="line">$　<span class="built_in">print</span>(li)</span><br></pre></td></tr></table></figure></p><p>输出结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1, 2, 3]</span><br></pre></td></tr></table></figure></p><p>11.列顺序显示<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ li = [1,2,3,<span class="string">"wang"</span>]</span><br><span class="line">$ li.reverse()</span><br><span class="line">$ <span class="built_in">print</span>(li)</span><br></pre></td></tr></table></figure></p><p>输出结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">'wang'</span>, 3, 2, 1]</span><br></pre></td></tr></table></figure></p><p>12.列表排序显示，从小到大<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ li = [1,3,2,33,10,9,23]</span><br><span class="line">$ li.sort()</span><br><span class="line">$ <span class="built_in">print</span>(li)</span><br></pre></td></tr></table></figure></p><p>输出结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1, 2, 3, 9, 10, 23, 33]</span><br></pre></td></tr></table></figure></p><p>13.列表临时排序，不改变原列表的排序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ li = [1,3,2,33,10,9,23]</span><br><span class="line">$ li.sorted()</span><br><span class="line">$ <span class="built_in">print</span>(<span class="string">"这是临时排序的列表："</span>,li)</span><br><span class="line">$ <span class="built_in">print</span>(<span class="string">"这是原列表的排序"</span>,li)</span><br></pre></td></tr></table></figure></p><p>通过比较，我们不难发现，原列表的排序并没有被改变</p><p>14.反转列表，并进行从大到小排序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ li = [1,2,3,33,10,9,23]</span><br><span class="line">$ li.sort(reverse=True)</span><br><span class="line">$ <span class="built_in">print</span>(li)</span><br></pre></td></tr></table></figure></p><p>输出结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[33, 23, 10, 9, 3, 2, 1]</span><br></pre></td></tr></table></figure></p><p>15.修改元素<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ li = [1,2,3,33,10,9,23]</span><br><span class="line">li[0] = 100</span><br></pre></td></tr></table></figure></p><p>print(li)<br>输出结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">li = [100,2,3,33,10,9,23]</span><br></pre></td></tr></table></figure></p><p>16.确定打印列表的长度<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ li = [1,2,3,33,10,9,23]</span><br><span class="line">$ len(li)</span><br><span class="line">$ <span class="built_in">print</span>(len)</span><br></pre></td></tr></table></figure></p><p>输出结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ 7</span><br></pre></td></tr></table></figure></p><img src="/2018/03/06/python列表的list魔法/未完待续.jpg"><img src="/2018/03/06/python列表的list魔法/timg.jpg">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天我们来谈一下什么是列表？&lt;br&gt;In a word ! 列表就是一系统按特定顺序排列的元素组成！列表中可以是数字，字符，列表中可以放任何你想放的东西。so,我们闲言少叙，马上来创建一个属于你的列表车库吧！&lt;/p&gt;
&lt;p&gt;创建您的车库列表：&lt;br&gt;&lt;figure clas
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python运算符</title>
    <link href="http://yoursite.com/2018/03/04/pytho%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <id>http://yoursite.com/2018/03/04/pytho运算符/</id>
    <published>2018-03-04T02:16:01.596Z</published>
    <updated>2018-03-06T09:43:44.751Z</updated>
    
    <content type="html"><![CDATA[<img src="/2018/03/04/pytho运算符/python图标.png" title="python"><p>python运算符常用运算符<br>一，算数运算符：+ , - , * , / , // , % , **<br>二，赋值运算符：<br>三，比较运算符：<br>四，逻辑运算符：<br>五，比较运算符：<br>in  </p><p>name = “天天向”</p><p>“””if “天” in name:<br>    print(“ok”)<br>else:<br>    print(“no”)</p><p>#天在name里所以输出结果为ok<br>if “天天” in name:<br>    print(“ok”)<br>else:<br>    print(“no”)</p><p> #天天也在name里，输出结果为ok<br>“””<br>if “天向” in name:<br>    print(“ok”)<br>else:<br>    print(“no”)</p><p>#虽然天向也在name里，但是没有字符没有连续，所以输出结果为no </p><p>not in</p><p>if “天” not in name:<br>    print(“ok”)<br>else:<br>    print(“no”)</p><p>#not in 是不在的情况输出ok，在的name 输出no </p><p>未完待续……</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/2018/03/04/pytho运算符/python图标.png&quot; title=&quot;python&quot;&gt;
&lt;p&gt;python运算符常用运算符&lt;br&gt;一，算数运算符：+ , - , * , / , // , % , **&lt;br&gt;二，赋值运算符：&lt;br&gt;三，比较运算符
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python数据基本类型及应用</title>
    <link href="http://yoursite.com/2018/03/02/2018-3-02-python%E6%95%B0%E6%8D%AE%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B%E5%8F%8A%E8%B0%83%E7%94%A8/"/>
    <id>http://yoursite.com/2018/03/02/2018-3-02-python数据基本类型及调用/</id>
    <published>2018-03-02T01:12:31.623Z</published>
    <updated>2018-03-21T08:27:14.927Z</updated>
    
    <content type="html"><![CDATA[<p>1.将字符转化为数字：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">"123"</span></span><br><span class="line">b = int(a)</span><br><span class="line">b = b + 1000</span><br><span class="line"><span class="built_in">print</span>(b)</span><br></pre></td></tr></table></figure></p><p>2.以二进制表示当前数字的位数。<br>    “””<br>        int.bit_length() -&gt; int</p><pre><code>Number of bits necessary to represent self in binary.&gt;&gt;&gt; bin(37)&apos;0b100101&apos;&gt;&gt;&gt; (37).bit_length()6</code></pre><p>   “””<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = 37</span><br><span class="line">b = a.bit_length()</span><br><span class="line"><span class="built_in">print</span>(b)</span><br></pre></td></tr></table></figure></p><p>3.查看对象的类，以及对象所具备的方法<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">temp = <span class="string">"alex"</span></span><br><span class="line">b = dir(temp)</span><br><span class="line"><span class="built_in">print</span>(b)</span><br></pre></td></tr></table></figure></p><p>4.help的用法<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">temp = <span class="string">"alex"</span></span><br><span class="line"><span class="built_in">help</span>(<span class="built_in">type</span>(temp))</span><br></pre></td></tr></table></figure></p><p>5.连接字符串<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list = [<span class="string">"fan"</span>,<span class="string">"cun"</span>]</span><br><span class="line">s = <span class="string">" "</span>.join(list) <span class="comment">#" "里是什么就通过什么符号连接个字符</span></span><br><span class="line"><span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure></p><p>6.实例代码如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">temp = <span class="string">"alex"</span></span><br><span class="line">s  = temp.capitalize() <span class="comment">#把变量的第一个字母变成大写，其余的全是小写</span></span><br><span class="line"><span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure></p><p>7.把变量居中，两边默认空格隔开，也可以输入指定符号代替空格<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">temp = <span class="string">"alex"</span></span><br><span class="line">s  = temp.center(10,<span class="string">"-"</span>)<span class="comment"># 10是指定总长度，把alax居中，其他6个长度用指定符号代替</span></span><br><span class="line"><span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure></p><p>输出结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">---alex---</span><br></pre></td></tr></table></figure></p><p>8.计算字符串出现的次数</p><pre><code>&quot;&quot;&quot;S.count(sub[, start[, end]]) -&gt; intReturn the number of non-overlapping occurrences of substring sub instring S[start:end].  Optional arguments start and end areinterpreted as in slice notation.返回子字符串sub中不重叠的次数字符串S [开始：结束]。 可选参数的开始和结束是解释为切片符号。&quot;&quot;&quot; </code></pre><p>实例代码如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">temp = <span class="string">"alex"</span></span><br><span class="line">s = temp.count(<span class="string">"a"</span>)</span><br><span class="line"><span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure></p><p>输出结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure></p><p>9.判断是否以指定字符串结尾<br>    “””<br>        S.endswith(suffix[, start[, end]]) -&gt; bool</p><pre><code>    Return True if S ends with the specified suffix, False otherwise.    With optional start, test S beginning at that position.    With optional end, stop comparing S at that position.    suffix can also be a tuple of strings to try.    如果S以指定的后缀结束，则返回True，否则返回False。    在可选启动的情况下，从该位置开始测试S.    选择结束时，停止在该位置比较S.    后缀也可以是字符串的元组来尝试。&quot;&quot;&quot;</code></pre><p> 实例代码如下：<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">temp = <span class="string">"alex"</span></span><br><span class="line">s = temp.endswith(<span class="string">"e"</span>)</span><br><span class="line"><span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure></p><p>输出结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">False</span><br></pre></td></tr></table></figure></p><pre><code>&quot;&quot;&quot;    S.startswith(prefix[, start[, end]]) -&gt; bool    Return True if S starts with the specified prefix, False otherwise.    With optional start, test S beginning at that position.    With optional end, stop comparing S at that position.    prefix can also be a tuple of strings to try.&quot;&quot;&quot;    return False</code></pre><p>实例代码如下:<br>temp = “aLex”<br>s =  temp.startswith(“a”)<br>print(s)</p><p>####################################################<br>    “””<br>        S.find(sub[, start[, end]]) -&gt; int</p><pre><code>    Return the lowest index in S where substring sub is found,    such that sub is contained within S[start:end].  Optional    arguments start and end are interpreted as in slice notation.    Return -1 on failure.      返回S中找到substring sub的最低索引，     使得sub包含在S [start：end]中。 可选的     参数开始和结束被解释为切片符号。     失败时返回-1。&quot;&quot;&quot;</code></pre><p>实例代码如下：<br>temp = “alex”<br>s = temp.find(“e”)<br>print(s)<br>输出结果:<br>2</p><p>####################################################<br>    “””<br>        S.casefold() -&gt; str</p><pre><code>    Return a version of S suitable for caseless comparisons.&quot;&quot;&quot;    所有字母变成小写    return &quot;&quot;</code></pre><p>实例代码如下：<br>temp = “aLex”<br>s =  temp.casefold()<br>print(s)</p><p>####################################################<br>    “””<br>        S.format(*args, **kwargs) -&gt; str</p><pre><code>    Return a formatted version of S, using substitutions from args and kwargs.    The substitutions are identified by braces (&apos;{&apos; and &apos;}&apos;).    使用args和kwargs的替换来返回S的格式化版本。    替换由大括号标识（&apos;{&apos;和&apos;}&apos;）。&quot;&quot;&quot;</code></pre><p>实例代码如下：<br>temp = “i am {name}”<br>s =  temp.format(name = “刘亦菲”)<br>print(s)</p><p>####################################################</p><pre><code>&quot;&quot;&quot;    S.index(sub[, start[, end]]) -&gt; int    Return the lowest index in S where substring sub is found,     such that sub is contained within S[start:end].  Optional    arguments start and end are interpreted as in slice notation.    Raises ValueError when the substring is not found.    返回S中找到substring sub的最低索引，使得sub包含在S [start：end]内。     可选的，参数的开始和结束被解释为切片的notatio&quot;&quot;&quot;</code></pre><p>实例代码如下：<br>temp = “alex”<br>s =  temp.index(“e”)<br>print(s)<br>输出结果：2</p><p>####################################################</p><pre><code>&quot;&quot;&quot;    S.isalnum() -&gt; bool    Return True if all characters in S are alphanumeric    and there is at least one character in S, False otherwise.    如果S中的所有字符都是字母数字，则返回True    S中至少有一个字符，否则为False。&quot;&quot;&quot;    return False</code></pre><p>实例代码如下：<br>temp = “alex”<br>s =  temp.isalnum()<br>print(s)</p><p>####################################################</p><pre><code>&quot;&quot;&quot;    S.isalnum() -&gt; bool    Return True if all characters in S are alphanumeric    and there is at least one character in S, False otherwise.    如果S中的所有字符都是字母，则返回True    S中至少有一个字符，否则为False。&quot;&quot;&quot;    return False</code></pre><p>实例代码如下：<br>temp = “alex”<br>s =  temp.isalpha()<br>print(s)</p><p>####################################################<br>    “””<br>        S.isdecimal() -&gt; bool</p><pre><code>    Return True if there are only decimal characters in S,    False otherwise.    如果S中只有十进制字符，则返回True，     否则为假。&quot;&quot;&quot;    return False</code></pre><p>实例代码如下：<br>temp = “123”<br>s =  temp.isdecimal()<br>print(s)</p><p>####################################################<br>    “””<br>        S.isdigit() -&gt; bool</p><pre><code>    Return True if all characters in S are digits    and there is at least one character in S, False otherwise.    如果S中的所有字符都是数字，则返回True    S中至少有一个字符，否则为False。&quot;&quot;&quot;    return False</code></pre><p>实例代码如下：<br>temp = “123123”<br>s =  temp.isdigit()<br>print(s)</p><p>####################################################<br>    “””<br>        S.upper() -&gt; str</p><pre><code>    Return a copy of S converted to uppercase.    “””     S.upper（） - &gt; str     将S的副本返回为大写。&quot;&quot;&quot;    return &quot;&quot;</code></pre><p>实例代码如下：<br>temp = “abc”<br>s =  temp.upper()<br>print(s)</p><p>####################################################</p><pre><code>&quot;&quot;&quot;    S.title() -&gt; str    Return a titlecased version of S, i.e. words start with title case    characters, all remaining cased characters have lower case.    返回S的标题版本，即以标题大小开始的单词    字符，所有剩余的装入字符的字符都是小写字母。&quot;&quot;&quot;    return &quot;&quot;</code></pre><p>实例代码如下：<br>temp = “alex”<br>s =  temp.title()<br>print(s)<br>输出结果：Alex</p><p>####################################################</p><pre><code>&quot;&quot;&quot;    S.strip([chars]) -&gt; str    Return a copy of the string S with leading and trailing    whitespace removed.    If chars is given and not None, remove characters in chars instead.    用于移除字符串头尾指定的字符（默认为空格）    参数：chars -- 移除字符串头尾指定的字符。&quot;&quot;&quot;</code></pre><p> 实例代码如下：</p><p>#去除首尾字符<br>temp = “111  alex   111”<br>s =  temp.strip(“1”)<br>print(s)</p><p>#去除首尾空格<br>temp = “  alex   “<br>s =  temp.strip(“ “)<br>print(s)</p><p>输出结果为：<br>  alex<br>alex</p><p>####################################################</p><pre><code>&quot;&quot;&quot;    S.swapcase() -&gt; str    Return a copy of S with uppercase characters converted to lowercase    and vice versa.    返回S的大写字母转换为小写的副本，反之亦然。&quot;&quot;&quot;    return &quot;&quot;</code></pre><p>实例代码如下：<br>temp = “alex”<br>s = temp.swapcase()<br>print(s)<br>输出结果：<br>ALEX       </p><p>####################################################</p><pre><code>&quot;&quot;&quot;    S.splitlines([keepends]) -&gt; list of strings    Return a list of the lines in S, breaking at line boundaries.    Line breaks are not included in the resulting list unless keepends    is given and true.    返回S中的行列表，在行边界处突破。 换行符不包括在结果列表中，除非有指示并且为真。&quot;&quot;&quot;    return []</code></pre><p>实例代码如下：<br> temp = “alex”<br>s = temp.splitlines()<br>print(s)<br>输出结果：[‘alex’]</p><p>####################################################<br>     “””<br>        S.split(sep=None, maxsplit=-1) -&gt; list of strings</p><pre><code>    Return a list of the words in S, using sep as the    delimiter string.  If maxsplit is given, at most maxsplit    splits are done. If sep is not specified or is None, any    whitespace string is a separator and empty strings are    removed from the result.    返回S中的单词列表，使用sep作为分隔符字符串。 如果给出maxsplit，最多可以完成maxsplit分割。     如果未指定sep或为None，则任何空格字符串都是分隔符，并且空字符串将从结果中删除。&quot;&quot;&quot;</code></pre><p>实例代码如下：<br>temp = “alex”<br>s = temp.split()<br>print(s)<br>输出结果：[‘alex’]</p><p>####################################################<br>    “””<br>        S.expandtabs(tabsize=8) -&gt; str</p><pre><code>    Return a copy of S where all tab characters are expanded using spaces.    If tabsize is not given, a tab size of 8 characters is assumed.    返回S的副本，其中所有制表符都使用空格扩展，如果未提供制表符大小，则假定制表符大小为8个字符。&quot;&quot;&quot;</code></pre><p>实例代码如下：<br>temp = “123”<br>s = temp.expandtabs(6)<br>print(s)</p><p>####################################################<br>    “””<br>        S.lower() -&gt; str</p><pre><code>    Return a copy of the string S converted to lowercase.    把内容全部转化成小写&quot;&quot;&quot;    return &quot;&quot;     </code></pre><p>实例代码如下：<br>temp = “LAAN”<br>s = temp.lower()<br>print(s)<br>输出结果：laan</p><p>####################################################<br>    “””<br>        S.lstrip([chars]) -&gt; str</p><pre><code>    Return a copy of the string S with leading whitespace removed.    If chars is given and not None, remove characters in chars instead.    #去除左边的空白&quot;&quot;&quot;    return &quot;&quot;</code></pre><p>实例代码如下：<br>temp = “    alex”<br>s = temp.lstrip()<br>print(s)</p><p>temp = “<em>**alex”<br>s = temp.lstrip(“</em>“)<br>print(s)<br>输出结果：alex</p><p>####################################################</p><pre><code>&quot;&quot;&quot;    S.rstrip([chars]) -&gt; str    Return a copy of the string S with trailing whitespace removed.    If chars is given and not None, remove characters in chars instead.    #删除右这的空白&quot;&quot;&quot;    return &quot;&quot;</code></pre><p>实例代码如下：<br>temp = “alex   “<br>s = temp.rstrip()<br>print(s)<br>输出结果：alex</p><p>####################################################<br>    “””<br>        S.ljust(width[, fillchar]) -&gt; str</p><pre><code>    Return S left-justified in a Unicode string of length width. Padding is    done using the specified fill character (default is a space).    在长度宽度的Unicode字符串中返回S左对齐。 填充是使用指定的填充字符完成的（默认为空格）。    参数：whdth 指定字符串总长度，多的默认用空格填充，&quot;&quot;&quot;    return &quot;&quot;</code></pre><p>实例代码如下：</p><p>#默认为空格<br>temp = “alex”<br>s = temp.ljust(6)<br>print(s)</p><p>#指定填充字符<br>temp = “alex”<br>s = temp.ljust(6,”*”)<br>print(s)<br>输出结果：alex**</p><p>####################################################<br> “””<br>        S.partition(sep) -&gt; (head, sep, tail)</p><pre><code> Search for the separator sep in S, and return the part before it, the separator itself, and the part after it.  If the separator is not found, return S and two empty strings.在S中搜索分隔符sep，并返回它之前的部分，分隔符本身以及其后的部分。 如果未找到分隔符，则返回S和两个空字符串。 &quot;&quot;&quot;</code></pre><p>实例代码如下：<br>temp = “alex”<br>s = temp.partition(“e”)<br>print(s)<br>输出结果：(‘al’, ‘e’, ‘x’)<br>temp = “alex”<br>s = temp.partition(“m”)<br>print(s)<br>输出结果：</p><p>####################################################<br>    “””<br>        S.replace(old, new[, count]) -&gt; str</p><pre><code>    Return a copy of S with all occurrences of substring    old replaced by new.  If the optional argument count is    given, only the first count occurrences are replaced.   返回S的副本，其中所有出现的子字符串旧被新的替换。 如果给出可选的参数计数，则仅替换第一个计数事件。&quot;&quot;&quot;    return &quot;&quot;</code></pre><p>实例代码如下：<br>temp = “alex”<br>s = temp.replace(“l”,”f”,)<br>print(s)<br>输出结果：afex<br>未完待续……</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.将字符转化为数字：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/spa
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python流程控制和循环练习</title>
    <link href="http://yoursite.com/2018/03/01/2018-02-28-python%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E5%8F%8A%E5%BE%AA%E7%8E%AF%E7%BB%83%E4%B9%A0/"/>
    <id>http://yoursite.com/2018/03/01/2018-02-28-python流程控制及循环练习/</id>
    <published>2018-03-01T04:34:59.294Z</published>
    <updated>2018-03-19T12:48:31.253Z</updated>
    
    <content type="html"><![CDATA[<h1 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h1><p>if 条件 ：<br>   执行代码块<br>elif 条件：<br>     执行代码块<br>else:<br>     执行代码块</p><p>例子代码一：</p><p>#inp变量接收用户输入的内容，input与用户交互，python2.7系列中是: raw_input<br>inp = input (“&gt;&gt;&gt;”)<br>if inp == “1”:      #如果用户输入1 ，控制台输出 你好1<br>    print(“你好1”)<br>elif inp == “2”:    #如果用户输入2 ，控制台输出 你好2<br>    print(“你好2”)<br>elif inp == “3”:    #如果用户输入3 ，控制台输出 你好3<br>    print(“你好3”)<br>else :                #如果用户输入非1，2，3 ，控制台输出wrong<br>    print(“wrong”)</p><p>例子代码二：</p><h1 id="循环控制"><a href="#循环控制" class="headerlink" title="循环控制"></a>循环控制</h1><p>import time # 导入time 包<br>while n1 = True<br>  print (“1”)<br>  time.sleep(1)  #时间打印间隔时间为1秒<br>  n1 = Flase     # 重新给n1赋值，当系统读到n1 = Flase时，流程结束，走到print(“end”)<br>print(“end”)    </p><p>例子代码二：<br>import time    #导入时间包<br>i = 1          # 给i 赋值为1<br>time.sleep(1)  #等待时间为  1 秒<br>flag = True    # 给flag 赋值为 True<br>while flag:    # 当为true时<br>    print(“你好”)  # 在控制台输出 你好<br>    if i == 10:  # 如果i 的值等于 10时<br>        flag = False   # 重新给flag赋值为 False<br>    i = i + 1  # 给i 赋值为 i + 1<br>print(“OVER”)  #当个以上流程结束时over，在控制台输出</p><p>#输出除7以外的1-10的数值</p><p>#输出1-10，当数值为7时，跳过这个循环，继续输出以下循环数值<br>实例代码如下：<br>i = 1<br>while True:<br>    if i == 7:<br>        i = i + 1<br>        continue;<br>    print(i)<br>    if i == 10:<br>        break;<br>    i = i + 1</p><p>#输入1 -100和的数值</p><p>#赋值变量i = 1,sum =0,第一个循环sum =0 + 1 ,执行i = i + 1 ,这时候i =2,再执行sum =sum +i (sum =1 ,而i=2,).</p><p>#最终sum = 1+ 2 ,如此循环，当i =100时，执行 break,中断整个循环，并执行print(sum)<br>实例代码如下：<br>i = 1<br>sum = 0<br>while True:<br>    sum = sum + i<br>    if i == 100:<br>        break;<br>    i = i + 1<br>print(sum)</p><p>#输出100以内的奇数</p><p>#要输出100以内的奇数，就得先明白什么时奇数，在数学中，一个数除以2 ，余数为1的数，就为奇数。</p><p>#输出1-100的数值，当遇到是奇数时就输入，不是奇数就不输出<br>实例代码如下：<br>i = 1 #给i赋值为1<br>while  i &lt; 101:<br>    temp = i % 2<br>    if temp ==1:<br>        print(i)<br>    else:<br>        pass<br>    i +=1<br>print(“执行结束”)</p><p>#输出100以内的偶数<br>实例代码如下：<br>    i = 1 #给i赋值为1<br>while  i &lt; 101:<br>    temp = i % 2<br>    if temp ==0:<br>        print(i)<br>    else:<br>        pass<br>    i +=1<br>print(“执行结束”)</p><p>#输出1-2+3-4….99的和</p><p>#先输出1-99的和，如果是偶数sum - i ,如果是奇数，sum +i ,最后循环结束，输出sum的数值<br>i = 1 #给i赋值为1<br>sum =0<br>while  i &lt; 100:<br>    temp = i % 2<br>    if temp ==0:<br>        sum = sum - i<br>    else:<br>        temp == 1<br>        sum = sum + i<br>    i +=1<br>print(sum)</p><p>#用户连续三次输入用户密码机会<br>i = 1<br>while i &lt; 4 :<br>    user = input(“username:”)<br>    pwd = input(“passwd:”)<br>    if user == “fancunjun” and pwd == “123”:<br>        print(“yes”)<br>        break;<br>    else:<br>        print(“try!”)<br>    i +=1<br>print(“请重新输入”)</p><p>未完待续……</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;流程控制&quot;&gt;&lt;a href=&quot;#流程控制&quot; class=&quot;headerlink&quot; title=&quot;流程控制&quot;&gt;&lt;/a&gt;流程控制&lt;/h1&gt;&lt;p&gt;if 条件 ：&lt;br&gt;   执行代码块&lt;br&gt;elif 条件：&lt;br&gt;     执行代码块&lt;br&gt;else:&lt;br&gt;    
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>安装nginx</title>
    <link href="http://yoursite.com/2018/03/01/2018-02-22-%E5%AE%89%E8%A3%85nginx/"/>
    <id>http://yoursite.com/2018/03/01/2018-02-22-安装nginx/</id>
    <published>2018-03-01T02:54:17.477Z</published>
    <updated>2018-03-01T04:27:30.160Z</updated>
    
    <content type="html"><![CDATA[<p> nginx三个大方面的功能<br>a: web服务   www, http .端口：80<br>b:负载均衡（反向代理proxy）<br>c web cache (web缓存)</p><p>2 ngin的优点：<br>高并发<br>占用资源少<br>功能种类多<br>支持epoll模型，使得ngint能够支持高并发<br>ngint配合动态服务下apache有区别<br>nginx可以对Ip限速，限制ip连接数</p><p>安装nginx准备：<br>安装proc<br>[root@s105 httpd]# yum install proc proc-devel -y<br>Loaded plugins: fastestmirror, refresh-packagekit, security<br>Loading mirror speeds from cached hostfile</p><ul><li>base: mirrors.aliyun.com</li><li>extras: mirrors.aliyun.com</li><li>updates: mirrors.aliyun.com<br>base                                                                                                                    | 3.7 kB     00:00<br>extras                                                                                                                  | 3.4 kB     00:00<br>updates                                                                                                                 | 3.4 kB     00:00<br>Setting up Install Process<br>No package proc available.<br>No package proc-devel available.<br>Error: Nothing to do<br>安装openssl<br>[root@s105 httpd]# yum install openssl openssl-devel -y<br>下载nginx:<br>wget <a href="http://nginx.org/download/nginx-1.12.2.tar.gz" target="_blank" rel="noopener">http://nginx.org/download/nginx-1.12.2.tar.gz</a><br>创建用户：<br>[root@s105 nginx-1.12.2]# useradd -s /sbin/nologin -M nginx<br>配置nginx:<br>[root@s105 nginx-1.12.2]# ./configure –user=nginx –group=nginx –prefix=/application/httpd/nginx –with-http_stub_status_module –with-http_ssl_module<br>检查是否成功：<br>[root@s105 nginx-1.12.2]# echo $?<br>0<br>检查语法：<br>nginx: the configuration file /application/nginx-1.12.2/conf/nginx.conf syntax is ok<br>nginx: configuration file /application/nginx-1.12.2/conf/nginx.conf test is successful<br>[root@s105 nginx-1.12.2]# curl 192.168.148.105<br>&lt;!DOCTYPE html&gt;<br><html><br><head><br><title>Welcome to nginx!</title><br><style><br> body {<pre><code>width: 35em;margin: 0 auto;font-family: Tahoma, Verdana, Arial, sans-serif;</code></pre> }<br></style><br></head><br><body><br><h1>Welcome to nginx!</h1><p>If you see this page, the nginx web server is successfully installed and<br>working. Further configuration is required.</p></body></html></li></ul><p>For online documentation and support please refer to<br><a href="http://nginx.org/" target="_blank" rel="noopener">nginx.org</a>.<br><br>Commercial support is available at<br><a href="http://nginx.com/" target="_blank" rel="noopener">nginx.com</a>.</p><p></p><p><em>Thank you for using nginx.</em></p><br><br><p></p><p>安装：<br>[root@s105 nginx-1.12.2]# make&amp;&amp;make install </p><p>启动服务：<br>[root@s105 nginx-1.12.2]# /application/nginx-1.12.2/sbin/nginx  #&gt;&gt;后面不用带start 跟apache不一样<br>然后在浏览器中输入Ip地址。就会出现</p><p>注意：提前创建好安装目录<br>查看端口：<br>[root@s105 conf]# netstat -lnput |grep nginx<br>tcp        0      0 0.0.0.0:80                  0.0.0.0:<em>                   LISTEN      11117/nginx<br>[root@s105 conf]# lsof -i:80<br>COMMAND   PID  USER   FD   TYPE DEVICE SIZE/OFF NODE NAME<br>nginx   11117  root    6u  IPv4  28773      0t0  TCP </em>:http (LISTEN)<br>nginx   11118 nginx    6u  IPv4  28773      0t0  TCP *:http (LISTEN)</p><p>排错：<br>ping 192.168.148.105 #&gt;&gt;检查物理机通不通<br>telnet 192.168.148.105到web服务通不通<br>服务器本地：curl 192.168.148.105 #检查web服务开没开</p><p>配置一个站点：</p><p>配置nginx第一个站点：<br>进入到ngin的文件目录地址：<br>[root@s105 html]# cd ~/tools/nginx-1.12.2/<br>[root@s105 nginx-1.12.2]# cd html/<br>[root@s105 html]# ls<br>50x.html  index.html<br>[root@s105 html]# vim index.html</p><p>配置虚拟机：<br>修改nginx.conf文件：</p><p>批量创建目录：<br>[root@s105 html]# mkdir {www,blog,bbs}<br>[root@s105 html]# ls<br>编写脚本循环写入文件内容：<br>第一次错误：<br>[root@s105 blog]# for n in www blog bbs ;do echo “$n.etiantian.org” &gt; /$n/index.html;done #这个地方不够细心，路径写错了，发现应该是在上一个目录下<br>-bash: /www/index.html: No such file or directory<br>-bash: /blog/index.html: No such file or directory<br>-bash: /bbs/index.html: No such file or directory<br>第二次错误：进入到上一路径、html下重新执行也不对，还是报没有文件<br>[root@s105 html]# for n in www blog bbs ;do echo “$n.etiantian.org” &gt; /$n/index.html;done<br>-bash: /www/index.html: No such file or directory<br>-bash: /blog/index.html: No such file or directory<br>-bash: /bbs/index.html: No such file or directory<br>第三次我就想实在不行到每个目录下创建得了：<br>[root@s105 bbs]# cd ../www;touch index.html<br>[root@s105 www]# cd ../blog;touch index.html<br>心想这一次应该好了吧，<br>第四次：<br>[root@s105 blog]# for n in www blog bbs ;do echo “$n.etiantian.org” &gt; /$n/index.html;done<br>-bash: /www/index.html: No such file or directory<br>-bash: /blog/index.html: No such file or directory<br>-bash: /bbs/index.html: No such file or directory<br>这个时候我已经要疯了，还是不行。<br>正好有个群友在线，果断请教，一眼看出来我路径不对</p><p>看完这段话，我突然明白了，错误在什么地方了。<br>[root@s105 blog]# for n in www blog bbs ;do echo “$n.etiantian.org” &gt; /$n/index.html;done<br>/$n前面的/代表根路径，这样写就是执行一百年也不会成功呀，哎，一定要细心。把/去掉，这下肯定会成功了<br>第五次执行：<br>[root@s105 html]# for n in www blog bbs ;do echo “$n.etiantian.org” &gt;$n/index.html;done<br>没有报错，哈哈成功了。yeae!<br>查看结果：<br>[root@s105 html]# for n in www blog bbs ;do cat “$n.etiantian.org” &gt;$n/index.html;done<br>cat: <a href="http://www.etiantian.org" target="_blank" rel="noopener">www.etiantian.org</a>: No such file or directory<br>cat: blog.etiantian.org: No such file or directory<br>cat: bbs.etiantian.org: No such file or directory<br>什么？？？没有内容？？什么情况、这是什么情况？？？<br>[root@s105 html]# for n in www blog bbs ;do cat $n/index.html;done<br>由于对脚本不熟悉，以为这样写是对的。<br>[root@s105 html]# cd www/<br>[root@s105 www]# ls<br>index.html<br>[root@s105 www]# cat index.html<br>检查没有内容、直接崩溃了，没办法呀，接着查找原因：发现：<br>[root@s105 html]# for n in www blog bbs ;do cat “$n.etiantian.org” &gt;$n/index.html;done<br>尖号和$号爱着，果断空格再试验<br>第六次：<br>[root@s105 html]# for n in www blog bbs ;do echo  “$n.etiantian.org” &gt; $n/index.html;done<br>没有报错，检查：<br>[root@s105 html]# for n in www blog bbs ;do cat $n/index.html;done<br><a href="http://www.etiantian.org" target="_blank" rel="noopener">www.etiantian.org</a><br>blog.etiantian.org<br>bbs.etiantian.org<br>这次是真正成功了。一个简单的配置虚拟机，错误这么多，基础不牢靠不行啊，还要多多细心，多学习基础知识。</p><p>添加状态信息，打开nginx的配置信息：添加如下内容：<br>[root@s105 ~]# vim /application/nginx/conf/nginx.conf<br>………………</p><p>#statux(状态信息)<br> server {<br>        listen       80;<br>        server_name  status.etiantian.org;<br>        stub_status on;<br>        access_log  off;</p><pre><code>}</code></pre><p>然后配置电脑宿主机的hosts文件，文件路径为：C:\Windows\System32\drivers\etc，添加如下内容：</p><p>然后,检查语法，平滑重启：<br>[root@s105 ~]#  /application/nginx/sbin/nginx -t<br>nginx: the configuration file /application/nginx-1.12.2/conf/nginx.conf syntax is ok<br>nginx: configuration file /application/nginx-1.12.2/conf/nginx.conf test is successful<br>[root@s105 ~]#  /application/nginx/sbin/nginx -s reload</p><p>#没有报错就是成功了</p><p>新开网页地址验证：</p><p>图中第一行开始是1，后经过同事访问本机ip测试得到2，说明成功监测的访问人数、</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; nginx三个大方面的功能&lt;br&gt;a: web服务   www, http .端口：80&lt;br&gt;b:负载均衡（反向代理proxy）&lt;br&gt;c web cache (web缓存)&lt;/p&gt;
&lt;p&gt;2 ngin的优点：&lt;br&gt;高并发&lt;br&gt;占用资源少&lt;br&gt;功能种类多&lt;br&gt;支
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/02/28/hello-world/"/>
    <id>http://yoursite.com/2018/02/28/hello-world/</id>
    <published>2018-02-27T16:26:39.067Z</published>
    <updated>2018-02-27T16:26:39.067Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
